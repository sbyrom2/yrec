C
C
C$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
C EQRELV
C$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
      SUBROUTINE EQRELV(TL,T,PL,P,DL,D,BETA,AMU,EMU,ETA,QDT,QDP,QCP,
C      1   DELA,QDTT,QDTP,QAT,QAP,QCPT,QCPP,X)  ! KC 2025-05-31
     1   DELA,QDTT,QDTP,QAT,QAP,QCPT,QCPP)

C          QDTT,QDTP = NAT-LOG DERIVATIVES OF QDT=D(LOG D )/D(LOG T )
C          QAT,QAP = NAT-LOG DERIVATIVES OF THE ADIABATIC DERIVATIVE
C DBG 7/92 MODIFIED TO INCLUDE DEBYE-HUCKEL CORRECTION.
C     CORRECTION IS APPLIED TO PRESSURE AND ALL THERMODYNAMIC VARIABLES.
C     TREATMENT IS ALSO VALID FOR ELECTRON DEGENERACY.  A RAMP FUNCTION
C     BETWEEN THE NONDEGENERATE AND DEGERNATE ELECTRON GAS CASES OF THE
C     D.H. CORRECTION IS USED (THIS IS NOT CORRECT BUT, HOPEFULLY IS
C     CLOSE ENOUGH.  CONSTANT TERM CDH IS CALCULATED IN SETUPS.

      IMPLICIT REAL*8 (A-H,O-Z)
      IMPLICIT LOGICAL*4(L)

      COMMON/LUOUT/ILAST,IDEBUG,ITRACK,ISHORT,IMILNE,IMODPT,ISTOR,IOWR
      COMMON/CCR/DVAL(43),ETAT8(43),DTABLE(5,43,20),IDEN(261)
      COMMON/CONST1/ CLN,CLNI,C4PI,C4PIL,C4PI3L,CC13,CC23,CPI
      COMMON/CONST2/CGAS,CA3,CA3L,CSIG,CSIGL,CGL,CMKH,CMKHN
      COMMON/CONST3/CDELRL,CMIXL,CMIXL2,CMIXL3,CLNDP,CSECYR
C DBG 7/92 CDH IS CONSTANT TERM DEFINED IN SETUPS
C     RAMP FUNCTION BETWEEN NO ELECTRON DEGENERACY ETA .LT. ETADH0
C     AND FULL ELECTRON DEGENERACY ETA .GT. ETADH1 VERSION OF D.H.
C     CORRECTION.
C     IF LDH = .TRUE. THEN APPLY D.H. CORRECTION.
C     ZDH IS ARRAY OF RELATIVE MASS FRACTIONS OF LAOL METAL MIXTURE
C     SUMMED TO 1.0.
C DBG 7/92 COMMON BLOCK ADDED TO COMPUTE DEBYE-HUCKEL CORRECTION.
      COMMON/DEBHU/CDH,ETADH0,ETADH1,ZDH(18),XXDH,
     1             YYDH,ZZDH,DHNUE(18),LDH
      DIMENSION DF1(5,3),DF2(5,3),FF(5,3),FFE(5)
      SAVE

C  THE ELECTRON PRESSURE (TABULATED IN FERMI TABLE) FOR A GIVEN (RHO,T)
C  IS FOUND HERE; THE DENSITY IS ADJUSTED SO THAT THE RESULTING TOTAL
C  PRESSURE (PE + PA + PR) EQUALS THE INITIAL P.  FOR DETAILS
C  CONSULT PRATHER'S THESIS.
C  SUFFIX E=ELECTRON;R=RADIATION;A=NUCLEON;I.E.PA=PRESSURE DUE TO NUCLEI
      PINV = 1.0D0/P
      BETA1 = 1.0D0 - BETA
      TL8 = TL
      PL8 = PL
      PR = BETA1*P
      RAMU = CGAS*AMU
      RAMUT = RAMU*T
      EMUL = DLOG10(EMU)
      EMUL8 = EMUL
C  PE IS TABULATED AS A FUNCTION OF X(=LOG D - LOG MUE - 3/2LOG T) AND
C  Y(= LOG T). FIND INDEX(JT1,JT2,JT3) FOR 3 PT INTERPOLATION IN Y.
C MHP 10/02 CORRECTED MIXED TYPE
      JT1 = INT(5.0D0*(TL - 5.0D0))
      JT1 = MAX0(1,MIN0(JT1,18))  ! Force jt1 to be in the table
      JT2 = JT1 + 1
      JT3 = JT1 + 2
      TTUD = 5.0D0*(TL8 - (5.0D0 + 0.20D0*DFLOAT(JT1)))
      TTCU = 0.50D0*TTUD*(TTUD - 1.0D0)
      TTDCU = TTUD - 0.50D0
      DML = DL + EMUL
      NDEN = 1
      ID1P = -100
C DBG 7/92 CALCULATE D.H. TERMS: ALPHA-MIXTURE, MASS-FRAC0, MASS-FRAC1
      IF (LDH) THEN
         ALMIX = 0.0D0
         DO II=1,18
            ALMIX = ALMIX + DHNUE(II)*ZDH(II)
         END DO
         CMFDH0 = 2.0D0*XXDH+1.5D0*YYDH+0.5D0*(ZZDH+ALMIX)
         CMFDH1 = XXDH+YYDH+0.5D0*ALMIX
      END IF
   10 CONTINUE
C BEGIN ITERATION LOOP FOR CORRECT DENSITY
C  FIND INDEX (ID1,ID2,ID3) FOR 3-PT INTERPOLATION IN X
      XX = DML - 1.50D0*TL8
      PR6= 20.0D0*(XX - DVAL(1)) + 1.0D0
C MHP 10/02 CORRECTED MIXED TYPE
      KK = INT(PR6)
C      KK = PR6
      KK = MIN0(261,MAX0(1,KK))
      ID1 = IDEN(KK)
C  IF INDEX UNCHANGED FROM PREVIOUS LOOP,SKIP THIS SECTION
      IF (ID1.EQ.ID1P)  GO TO 30
      ID1P = ID1
      ID2 = ID1 + 1
      ID3 = ID1 + 2
      PR9 = 1.0D0/( DVAL(ID3) - DVAL(ID2) )
      PR8 = 1.0D0/( DVAL(ID2) - DVAL(ID1) )
      PR7 = 1.0D0/( DVAL(ID1) - DVAL(ID3) )
      CDEN1 = -PR7*PR8
      CDEN2 = -PR8*PR9
      CDEN3 = -PR9*PR7
C  INTERPOLATION IN Y IS NEWTONIAN(EQUAL SPACING IN Y)
      DO 20 NN = 1,3
       ID = ID1 + NN - 1
       DF1(1,NN) = DTABLE(1,ID,JT2) - DTABLE(1,ID,JT1)
       DF2(1,NN) = DTABLE(1,ID,JT3)-DTABLE(1,ID,JT2)-DF1(1,NN)
       FF(1,NN) = DTABLE(1,ID,JT1) + TTUD*DF1(1,NN) + TTCU*DF2(1,NN)
   20 CONTINUE
      DPEL2 = 2.0D0*(FF(1,1)*CDEN1 + FF(1,2)*CDEN2 + FF(1,3)*CDEN3)
   30 DX1 = XX - DVAL(ID1)
      DX2 = XX - DVAL(ID2)
      DX3 = XX - DVAL(ID3)
C  INTERPOLATION IN X IS LAGRANGIAN(UNEQUAL TABLE SPACING IN X)
      CL1 = DX2*DX3*CDEN1
      CL2 = DX3*DX1*CDEN2
      CL3 = DX1*DX2*CDEN3
      DCL1 = (DX2 + DX3)*CDEN1
      DCL2 = (DX3 + DX1)*CDEN2
      DCL3 = (DX1 + DX2)*CDEN3
      IF (LDH) THEN
         ETA = CL1*ETAT8(ID1) + CL2*ETAT8(ID2) + CL3*ETAT8(ID3)
         IF (ETA .LT. ETADH0) THEN
            CMFDH = CMFDH0*SQRT(CMFDH0)
         ELSE IF (ETA .GT. ETADH1) THEN
            CMFDH = CMFDH0*SQRT(CMFDH1)
         ELSE
            T0 = CMFDH0*SQRT(CMFDH0)
            T1 = CMFDH0*SQRT(CMFDH1)
            SLOPE = (T1-T0)/(ETADH1-ETADH0)
            CMFDH = T0+(ETA-ETADH0)*SLOPE
         END IF
      END IF
C  NOW FIND PE AND ITS 1ST AND 2ND DERIVS.W/R/T DENSITY
      PEL =  CL1*FF(1,1) +  CL2*FF(1,2) +  CL3*FF(1,3)
      DPEL1 = DCL1*FF(1,1) + DCL2*FF(1,2) + DCL3*FF(1,3)
      DL8 = DML - EMUL8
      D8 = DEXP(CLN*DL8)
      PA = RAMUT*D8
      PE = DEXP(CLN*PEL)
      IF (LDH) THEN
         PDH = CDH*CMFDH*SQRT(D8/T)*D8
      END IF
      PT = PA + PE + PR
      IF (LDH) THEN
         PT = PT + PDH
         PDHP = PDH/PT
      END IF
      PTL = DLOG10(PT)
      PR7 = (PA + PE*DPEL1)/PT
      IF (LDH) THEN
         PR7 = PR7 + 1.5D0*PDHP
      END IF
      PR8 = (PTL - PL8)/PR7
      PR9 = CLN*( (PA + PE*(DPEL1**2+DPEL2/CLN))/(PT*PR7) - PR7 )
      IF (LDH) THEN
         PR9 = PR9 + 2.25D0*PDHP/PR7
      END IF
C FACTOR IS THE DIFFERENCE BETWEEN THE P PREDICTED FROM THE GIVEN RHO
C AND THE TRUE P; IF TOO LARGE INCREMENT RHO AND TRY AGAIN.
      FACTOR=DABS(PR8)
      IF(factor .lt. 1D-15) factor = 1D-15
      PR8L=DLOG10(FACTOR)
      PR9L=DLOG10(DABS(PR9))
      FACTL=DLOG10(0.5D0)+PR9L+2.D0*PR8L
      FACT=DEXP(CLN*FACTL)
      FACT=DSIGN(FACT,PR9)
      CORR=-PR8-FACT
c  limit range of changes in density to a factor of 10**4   llp  1/31/07
      if(corr .gt.  4D0) corr =  4d0
      if(corr .lt. -4D0) corr = -4D0
      IF(DABS(CORR).GE.1.0D-08) THEN
       DML = DML + CORR
       NDEN = NDEN + 1
       IF(NDEN.LE.20) GO TO 10
       WRITE(ISHORT,40) TL,PL,PTL,DML,CORR
   40    FORMAT('EQRELV: Did not Converge: T,P,Pcalc,Dcalc,CORR',
     *          4F10.6,F20.12)
c       PAUSE
       RETURN
c         STOP 'ERRELV failed'
      ENDIF
      DL = DL8
      D = D8
      DO 60 KK = 2,5
       DO 50 NN = 1,3
          ID = ID1 + NN - 1
          DF1(KK,NN) = DTABLE(KK,ID,JT2) - DTABLE(KK,ID,JT1)
          DF2(KK,NN)=(DTABLE(KK,ID,JT3)-DTABLE(KK,ID,JT2))-DF1(KK,NN)
          FF(KK,NN)=DTABLE(KK,ID,JT1)+TTUD*DF1(KK,NN)+TTCU*DF2(KK,NN)
   50    CONTINUE
       FFE(KK) = CL1*FF(KK,1) + CL2*FF(KK,2) + CL3*FF(KK,3)
   60 CONTINUE
C DERIVATIVES OF P
      PEQ = DEXP(CLN*FFE(3))
      QPED = FFE(4)
      QQPEDD =(DCL1*FF(4,1) + DCL2*FF(4,2) + DCL3*FF(4,3))*CLNI
      PR1 = DF1(3,1)+TTDCU*DF2(3,1)
      PR2 = DF1(3,2)+TTDCU*DF2(3,2)
      PR3 = DF1(3,3)+TTDCU*DF2(3,3)
      PR4 = DCL1*FF(3,1) + DCL2*FF(3,2) + DCL3*FF(3,3)
      PR5 =   5.0D0*(CL1*PR1 + CL2*PR2 + CL3*PR3)
      QPEQD = PEQ*PR4
      QPEQT = PEQ*(PR5 - 1.50D0*PR4)
      QPT = (PA + PEQ)*PINV + 4.0D0*BETA1
      IF (LDH) THEN
         QPT = QPT - 0.5D0*PDHP
      END IF
      QPD = (PA + PE*QPED)*PINV
      IF (LDH) THEN
         QPD = QPD + 1.5D0*PDHP
      END IF
      QQPTT = (PA + QPEQT)*PINV + 16.0D0*BETA1 - QPT**2
      IF (LDH) THEN
         QQPTT = QQPTT+(0.5D0*QPT+0.25D0)*PDHP
      END IF
      QQPDT = (PA + QPEQD)*PINV - QPT*QPD
      IF (LDH) THEN
         QQPDT = QQPDT+(0.5D0*QPT-0.75D0)*PDHP
      END IF
      QQPDD = (PA + PE*(QPED**2 + QQPEDD))*PINV - QPD**2
      IF (LDH) THEN
        QQPDD = QQPDD + (-1.5D0*QPD+2.25D0)*PDHP
      END IF
C DERIVATIVES OF DENSITY
      QDP = 1.0D0/QPD
      QDT = -QPT*QDP
      PR1 = QDP**2
      QDPP = -QQPDD*QDP*PR1
      QDTP = -QPT*QDPP - QQPDT*PR1
      QDTT = -QPT*QDTP - QDP*(QQPTT + QDT*QQPDT)
C INTERNAL ENERGY TERM(U) AND ITS DERIVATIVES
      UE  = DEXP(CLN*(FFE(2) + EMUL))
      UEQ = DEXP(CLN*(FFE(5) + EMUL))
      PR1 = DF1(5,1)+TTDCU*DF2(5,1)
      PR2 = DF1(5,2)+TTDCU*DF2(5,2)
      PR3 = DF1(5,3)+TTDCU*DF2(5,3)
      PR4 = DCL1*FF(5,1) + DCL2*FF(5,2) + DCL3*FF(5,3)
      PR5 =   5.0D0*(CL1*PR1 + CL2*PR2 + CL3*PR3)
      QUEQT = UEQ*(PR5 - 1.50D0*PR4)
      PD = P/D
      PDT = PD/T
      UA = 1.50D0*RAMUT
      UR = 3.0D0*BETA1*PD
      IF (LDH) THEN
         UDH = 3.0D0*PDH/D8
      END IF
      U = UA + UE + UR
      IF (LDH) THEN
         U = U + UDH
         UDHU = UDH/U
      END IF
      UI = 1.0D0/U
      PDU = PD*UI
      QUTD = (UA + UEQ + 4.0D0*UR)*UI
      IF(LDH) THEN
         QUTD = QUTD -0.5D0*UDHU
      END IF
      QUDT = PDU*(1.0D0 - QPT)
      IF (LDH) THEN
         QUDT = QUDT + 0.5D0*UDHU
      END IF
      QUTP = QUTD + QDT*QUDT
      QQUTT = (UA + QUEQT + 16.0D0*UR)*UI - QUTD**2
      IF (LDH) THEN
         QQUTT = QQUTT + (0.5D0*QUTD+0.25D0)*UDHU
      END IF
      QQUDT = QUDT*(QPT - QUTD) - PDU*QQPTT
      IF (LDH) THEN
         QQUDT = QQUDT + (0.5D0*QUDT-0.25D0)*UDHU
      END IF
C SPECIFIC HEAT(QCP) AND ITS DERIVATIVES
      PR1 =-PDT*QDT
      PR2 = U/T
      PR3 = -(1.0D0 + QDT) +  QDTT/QDT
      PR4 = (1.0D0 - QDP) +  QDTP/QDT
      ACP = PR1*QPT
      BCP = PR2*QUTD
      QCP = ACP + BCP
      QCPI = 1.0D0/QCP
      QCPT = ACP*PR3 + PR1*(QQPTT + QDT*QQPDT) +
     1        BCP*(QUTP - 1.0D0) + PR2*(QQUTT + QDT*QQUDT)
      QCPP = ACP*PR4 + QDP*(PR1*QQPDT + BCP*QUDT + PR2*QQUDT)
      QCPT = QCPT*QCPI
      QCPP = QCPP*QCPI
C ADIABATIC GRADIENT(DELA) AND DERIVATIVES ( ALL DERIVS ARE LN(DELA)/LN(
      DELA = PR1*QCPI
      QAT = PR3 - QCPT
      QAP = PR4 - QCPP
      ETA = CL1*ETAT8(ID1) + CL2*ETAT8(ID2) + CL3*ETAT8(ID3)

      RETURN
      END
