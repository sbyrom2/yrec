C $$$$$$
C       SUBROUTINE MICRODIFF_MTE(NLIGHT,CSLIGHT,HCOMP,HQPR,HRU,HS1,HTU,IBEGIN,
C      *               IEND,M,DR,NPT,LC,ODEN,OTEM,EM,ER,EDEN,ETEM,EHQPR,EDELR,  # KC 2025-05-31
      SUBROUTINE MICRODIFF_MTE(NLIGHT,CSLIGHT,HCOMP,HQPR,HRU,HS1,IBEGIN,
     *               IEND,M,DR,NPT,ODEN,OTEM,EM,ER,EDEN,ETEM,EHQPR,EDELR,
     *               EX,EY,EZ,ELI,EM_H,ER_H,EDEN_H,ETEM_H,EHQPR_H,EDELR_H,
     *               EX_H,EY_H,EZ_H,ELI_H)

      PARAMETER (JSON=5000)
      IMPLICIT REAL*8(A-H,O-Z)
      IMPLICIT LOGICAL*4(L)
C MHP 3/94 ADDED METAL DIFFUSION.
      COMMON/GRAVS3/FGRY,FGRZ,LTHOUL,LDIFZ
      COMMON/GRAVS4/LNEWDIF,LDIFLI
      COMMON/SCRTCH/SESUM(JSON),SEG(7,JSON),SBETA(JSON),SETA(JSON),
     *       LOCONS(JSON),SO(JSON),SDEL(3,JSON),SFXION(3,JSON),SVEL(JSON),SCP(JSON)
C       DIMENSION HCOMP(15,JSON),HQPR(JSON),HRU(JSON),HS1(JSON),HTU(JSON),  ! KC 2025-05-31
      DIMENSION HCOMP(15,JSON),HQPR(JSON),HRU(JSON),HS1(JSON),
     *          ODEN(JSON),OTEM(JSON),EM(JSON),ER(JSON),EDEN(JSON),ETEM(JSON),
     *          EHQPR(JSON),EDELR(JSON),EX(JSON),EY(JSON),EZ(JSON),
     *          ELI(NLIGHT,JSON),EM_H(JSON),ER_H(JSON),EDEN_H(JSON),
     *          ETEM_H(JSON),EHQPR_H(JSON),EDELR_H(JSON),EX_H(JSON),
C KC 2025-05-30 fixed -Wconversion
C      *          EY_H(JSON),EZ_H(JSON),ELI_H(NLIGHT,JSON),CSLIGHT(NLIGHT),
     *          EY_H(JSON),EZ_H(JSON),ELI_H(NLIGHT,JSON),
     *          FACINTERP(4),FACDERIV(4),TABLER(4)
      INTEGER CSLIGHT(NLIGHT)
      INTEGER HALFJSON
      SAVE
C  FIND MINIMUM MODEL POINT SPACING IN RADIUS.
      DRTOT = HRU(IEND)-HRU(IBEGIN)
      DRMIN = DRTOT
c  ID THE MINIMUM SPACING IN THE 20 LAYERS BELOW THE SURFACE CZ.
      ISTART = MAX(IEND-20,IBEGIN+1)
      DO 7 I = ISTART,IEND
         DRMIN=MIN(DRMIN,HRU(I)-HRU(I-1))
    7 CONTINUE
C  ASSIGN THE MINIMUM NUMBER OF EQUALLY SPACED GRID POINTS SUCH THAT
C  DR <= DRMIN.
      NPT=INT(DRTOT/DRMIN)
      IF(MOD(DRTOT,DRMIN).NE.0.0D0)NPT=NPT+1
C JVS add additional trap to deal with models with NPT=1
      IF (NPT .EQ. 1) NPT=NPT+1
C  ENSURE THAT NUMBER OF POINTS DOES NOT EXCEED JSON.

      HALFJSON = 5000
      NPT=MIN(NPT,HALFJSON)
      DR = DRTOT/DFLOAT(NPT-1)
C  SET UP VECTOR OF EQUALLY SPACED RADII AT ZONE MIDPOINTS.
      ER_H(1)=HRU(IBEGIN)+0.5D0*DR
C JVS added logic trap (IF statement)
      IF (NPT .EQ. 2) THEN
         ER_H(2)=ER_H(1)+DR
      ELSE
         DO 10 I = 2,NPT-1 ! old piece
            IF(I-1 .EQ. 0) PRINT*, 'mte line 47'
            ER_H(I)=ER_H(I-1)+DR  ! old piece
  10     CONTINUE          ! old piece
      ENDIF

C  NOW USE 4-POINT LAGRANGIAN INTERPOLATION TO FIND RUN OF VARIABLES
C  AT EQUALLY SPACED ZONE MIDPOINTS.
C
C  FIRST POINT : LINEAR INTERPOLATION BETWEEN STARTING POINT AND 2ND PT.
      DO 15 IU=2,NPT
         IF(HRU(IU).GE.ER_H(1))GOTO 17
   15 CONTINUE
      IU=NPT
   17 CONTINUE
      FX=(ER_H(1)-HRU(IU-1))/(HRU(IU)-HRU(IU-1))
      EM_H(1) = HS1(IU-1)+FX*(HS1(IU)-HS1(IU-1))
      EDEN_H(1) = ODEN(IU-1)+FX*(ODEN(IU)-ODEN(IU-1))
      ETEM_H(1) = OTEM(IU-1)+FX*(OTEM(IU)-OTEM(IU-1))
      EHQPR_H(1) = HQPR(IU-1)+FX*(HQPR(IU)-HQPR(IU-1))
      EDELR_H(1) = SDEL(2,IU-1)+FX*(SDEL(2,IU)-SDEL(2,IU-1))
      EX_H(1) = HCOMP(1,IU-1)+FX*(HCOMP(1,IU)-HCOMP(1,IU-1))
      EY_H(1) = HCOMP(2,IU-1)+FX*(HCOMP(2,IU)-HCOMP(2,IU-1))
      EZ_H(1) = HCOMP(3,IU-1)+FX*(HCOMP(3,IU)-HCOMP(3,IU-1))
      IF(LDIFLI)THEN
         DO KK=1,NLIGHT
            II = CSLIGHT(KK)
            ELI_H(KK,1) = HCOMP(II,IU-1)+FX*(HCOMP(II,IU)-HCOMP(II,IU-1))
         END DO
      ENDIF

C  FOR OTHER POINTS: FIRST FIND 4 NEAREST (IN RADIUS) MODEL POINTS
C  AND THEN FIND LAGRANGIAN INTERPOLATION FACTORS. APPLY THEM TO FIND
C  MODEL QUANTITIES AT THE EQUALLY SPACED GRID POINTS.
C  JMIN IS THE UPPERMOST MODEL POINT ABOVE THE PREVIOUS EQUALLY SPACED
C  GRID POINT (IN RADIUS).
      JMIN=IBEGIN+1
      DO 50 I=2,NPT-1
         DO 20 J = JMIN,IEND
C  FIND 4 MODEL POINTS CLOSEST TO THE EQUALLY SPACED GRID POINT.
            IF(HRU(J).GE.ER_H(I))THEN
C  ENSURE THAT FIRST INTERPOLATION POINT NO LESS THAN FIRST MODEL POINT.
               K0 = MAX(J-2,1)
C  ENSURE THAT LAST INTERPOLATION POINT NO GREATER THAN LAST MODEL POINT.
               K0 = MIN(K0,M-3)
               JMIN=J
               GOTO 30
            ENDIF
   20    CONTINUE
         K0 = M-3
         JMIN=M
   30    CONTINUE
         DO 40 K=1,4
            TABLER(K)=HRU(K0+K-1)
   40    CONTINUE
         GRIDRAD=ER_H(I)
C  FIND 4 POINT LAGRANGIAN INTERPOLATION FACTORS.
C  FACINTERP=INTERPOLATION FACTORS FOR POINT GRIDRAD GIVEN THE 4 TABLE
C  RADII IN TABLER; FACDERIV=SAME FOR DERIVATIVES AT POINT GRIDRAD.
         CALL INTERP(TABLER,FACINTERP,FACDERIV,GRIDRAD)
C  PERFORM 4 POINT LAGRANGIAN INTERPOLATION FOR DESIRED QUANTITIES:
C  MASS WITHIN THE RADIUS ER
         EM_H(I) = FACINTERP(1)*HS1(K0)+FACINTERP(2)*HS1(K0+1)+
     *             FACINTERP(3)*HS1(K0+2)+FACINTERP(4)*HS1(K0+3)
C  RELAVENT PHYSICAL VARIABLES
         EDEN_H(I) = FACINTERP(1)*ODEN(K0)+FACINTERP(2)*ODEN(K0+1)+
     *             FACINTERP(3)*ODEN(K0+2)+FACINTERP(4)*ODEN(K0+3)
         ETEM_H(I) = FACINTERP(1)*OTEM(K0)+FACINTERP(2)*OTEM(K0+1)+
     *             FACINTERP(3)*OTEM(K0+2)+FACINTERP(4)*OTEM(K0+3)
         EHQPR_H(I) = FACINTERP(1)*HQPR(K0)+FACINTERP(2)*HQPR(K0+1)+
     *             FACINTERP(3)*HQPR(K0+2)+FACINTERP(4)*HQPR(K0+3)
         EDELR_H(I) = FACINTERP(1)*SDEL(2,K0)+FACINTERP(2)*SDEL(2,K0+1)+
     *             FACINTERP(3)*SDEL(2,K0+2)+FACINTERP(4)*SDEL(2,K0+3)
C  MASS FRACTION OF HYDROGEN
         EX_H(I)=FACINTERP(1)*HCOMP(1,K0)
     *        +FACINTERP(2)*HCOMP(1,K0+1)
     *        +FACINTERP(3)*HCOMP(1,K0+2)
     *        +FACINTERP(4)*HCOMP(1,K0+3)
C  MASS FRACTION OF HELIUM
         EY_H(I)=FACINTERP(1)*HCOMP(2,K0)
     *        +FACINTERP(2)*HCOMP(2,K0+1)
     *        +FACINTERP(3)*HCOMP(2,K0+2)
     *        +FACINTERP(4)*HCOMP(2,K0+3)
C  MASS FRACTION OF METALS
         EZ_H(I)=FACINTERP(1)*HCOMP(3,K0)
     *        +FACINTERP(2)*HCOMP(3,K0+1)
     *        +FACINTERP(3)*HCOMP(3,K0+2)
     *        +FACINTERP(4)*HCOMP(3,K0+3)
C  MASS FRACTION OF LIGHT ELEMENTS
         IF(LDIFLI)THEN
            DO KK=1,NLIGHT
               II = CSLIGHT(KK)
               ELI_H(KK,I)=FACINTERP(1)*HCOMP(II,K0)
     *                 +FACINTERP(2)*HCOMP(II,K0+1)
     *                 +FACINTERP(3)*HCOMP(II,K0+2)
     *                 +FACINTERP(4)*HCOMP(II,K0+3)
            END DO
         ENDIF
   50 CONTINUE

C  SET UP VECTOR OF EQUALLY SPACED RADII AT ZONE CENTERS.
      ER(1)=HRU(IBEGIN)
      DO 60 I = 2,NPT
         ER(I)=ER(I-1)+DR
   60 CONTINUE

C  NOW USE 4-POINT LAGRANGIAN INTERPOLATION TO FIND RUN OF VARIABLES
C  AT EQUALLY SPACED ZONE CENTERS.
C
C  FIRST POINT : BY DEFINITION, AT STARTING POINT.
C G Somers; added interpolation for Xfrac, Rho, T, and HQPR.
      EM(1) = HS1(IBEGIN)
      EDEN(1) = ODEN(IBEGIN)
      ETEM(1) = OTEM(IBEGIN)
      EHQPR(1) = HQPR(IBEGIN)
      EDELR(1) = SDEL(2,IBEGIN)
      EX(1) = HCOMP(1,IBEGIN)
      EY(1) = HCOMP(2,IBEGIN)
      EZ(1) = HCOMP(3,IBEGIN)
      IF(LDIFLI)THEN
         DO KK=1,NLIGHT
            II = CSLIGHT(KK)
            ELI(KK,1) = HCOMP(II,IBEGIN)
         END DO
      ENDIF
C  FOR OTHER POINTS: FIRST FIND 4 NEAREST (IN RADIUS) MODEL POINTS
C  AND THEN FIND LAGRANGIAN INTERPOLATION FACTORS. APPLY THEM TO FIND
C  MODEL QUANTITIES AT THE EQUALLY SPACED GRID POINTS.
C  JMIN IS THE UPPERMOST MODEL POINT ABOVE THE PREVIOUS EQUALLY SPACED
C  GRID POINT (IN RADIUS).
      JMIN=IBEGIN+1
      DO 70 I=2,NPT-1
         DO 80 J = JMIN,IEND
C  FIND 4 MODEL POINTS CLOSEST TO THE EQUALLY SPACED GRID POINT.
            IF(HRU(J).GE.ER(I))THEN
C  ENSURE THAT FIRST INTERPOLATION POINT NO LESS THAN FIRST MODEL POINT.
               K0 = MAX(J-2,1)
C  ENSURE THAT LAST INTERPOLATION POINT NO GREATER THAN LAST MODEL POINT.
               K0 = MIN(K0,M-3)
               JMIN=J
               GOTO 90
            ENDIF
   80    CONTINUE
         K0 = M-3
         JMIN=M
   90    CONTINUE
         DO 100 K=1,4
            TABLER(K)=HRU(K0+K-1)
  100    CONTINUE
         GRIDRAD=ER(I)
C  FIND 4 POINT LAGRANGIAN INTERPOLATION FACTORS.
C  FACINTERP=INTERPOLATION FACTORS FOR POINT GRIDRAD GIVEN THE 4 TABLE
C  RADII IN TABLER; FACDERIV=SAME FOR DERIVATIVES AT POINT GRIDRAD.
         CALL INTERP(TABLER,FACINTERP,FACDERIV,GRIDRAD)
C  PERFORM 4 POINT LAGRANGIAN INTERPOLATION FOR DESIRED QUANTITIES:
C  MASS WITHIN THE RADIUS ER
         EM(I) = FACINTERP(1)*HS1(K0)+FACINTERP(2)*HS1(K0+1)+
     *             FACINTERP(3)*HS1(K0+2)+FACINTERP(4)*HS1(K0+3)
         EDEN(I) = FACINTERP(1)*ODEN(K0)+FACINTERP(2)*ODEN(K0+1)+
     *             FACINTERP(3)*ODEN(K0+2)+FACINTERP(4)*ODEN(K0+3)
         ETEM(I) = FACINTERP(1)*OTEM(K0)+FACINTERP(2)*OTEM(K0+1)+
     *             FACINTERP(3)*OTEM(K0+2)+FACINTERP(4)*OTEM(K0+3)
         EHQPR(I) = FACINTERP(1)*HQPR(K0)+FACINTERP(2)*HQPR(K0+1)+
     *             FACINTERP(3)*HQPR(K0+2)+FACINTERP(4)*HQPR(K0+3)
         EDELR(I) = FACINTERP(1)*SDEL(2,K0)+FACINTERP(2)*SDEL(2,K0+1)+
     *             FACINTERP(3)*SDEL(2,K0+2)+FACINTERP(4)*SDEL(2,K0+3)
         EX(I)=FACINTERP(1)*HCOMP(1,K0)
     *        +FACINTERP(2)*HCOMP(1,K0+1)
     *        +FACINTERP(3)*HCOMP(1,K0+2)
     *        +FACINTERP(4)*HCOMP(1,K0+3)
         EY(I)=FACINTERP(1)*HCOMP(2,K0)
     *        +FACINTERP(2)*HCOMP(2,K0+1)
     *        +FACINTERP(3)*HCOMP(2,K0+2)
     *        +FACINTERP(4)*HCOMP(2,K0+3)
         EZ(I)=FACINTERP(1)*HCOMP(3,K0)
     *        +FACINTERP(2)*HCOMP(3,K0+1)
     *        +FACINTERP(3)*HCOMP(3,K0+2)
     *        +FACINTERP(4)*HCOMP(3,K0+3)
         IF(LDIFLI)THEN
            DO KK=1,NLIGHT
               II = CSLIGHT(KK)
               ELI(KK,I)=FACINTERP(1)*HCOMP(II,K0)
     *              +FACINTERP(2)*HCOMP(II,K0+1)
     *              +FACINTERP(3)*HCOMP(II,K0+2)
     *              +FACINTERP(4)*HCOMP(II,K0+3)
            END DO
         ENDIF
   70 CONTINUE
C  LAST POINT : BY DEFINITION, AT ENDING POINT.
      EM(NPT) = HS1(IEND)
      EDEN(NPT) = ODEN(IEND)
      ETEM(NPT) = OTEM(IEND)
      EHQPR(NPT) = HQPR(IEND)
      EDELR(NPT) = SDEL(2,IEND)
      EX(NPT) = HCOMP(1,IEND)
      EY(NPT) = HCOMP(2,IEND)
      EZ(NPT) = HCOMP(3,IEND)
      IF(LDIFLI)THEN
         DO KK=1,NLIGHT
            II = CSLIGHT(KK)
            ELI(KK,NPT) = HCOMP(II,IEND)
         END DO
      ENDIF
      RETURN
      END
