C
C
C$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
C EQSAHA
C$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
      SUBROUTINE EQSAHA(FX,TL,T,PL,P,DL,D,BETA,BETAI,BETA14,FXION,RMU,
     *AMU,EMU,LDERIV,LATMO,QDT,QDP,QCP,DELA,QDTT,QDTP,QAT,QAP,QCPT,QCPP,
     *KSAHA)

      IMPLICIT REAL*8 (A-H,O-Z)
      IMPLICIT LOGICAL*4(L)

      COMMON/LUOUT/ILAST,IDEBUG,ITRACK,ISHORT,IMILNE,IMODPT,ISTOR,IOWR
      DIMENSION FX(12),FXION(3)
      DIMENSION SAHATT(11),FXT(11)
      DIMENSION SAHAU(13),SAHAT(11),SAHAK(11),SAHAX(11),FXS(11)
      COMMON/CONST1/ CLN,CLNI,C4PI,C4PIL,C4PI3L,CC13,CC23,CPI
      COMMON/CONST2/CGAS,CA3,CA3L,CSIG,CSIGL,CGL,CMKH,CMKHN
      DATA SAHAT,SAHET0,SAHET1/59630.,69450.,88710.,91330.,94570.,
     T 130630.,157800.,158000.,168630.,183080.,250200.,285270.,631370./
      DATA SAHAU/-.01,-.47,.60,.49,.08,.11,.0,-.04,.64,.99,1.03,.6,.0/
      DATA NZ/11/
      DATA MAXS/20/
      DATA STOL/4.0D1/
      DATA E,SAHEX1,SAHEX2/0.1D0,0.0D0,0.0D0/
      DATA STOLEE/1.0D-09/
      SAVE

C  1    FXHE = FX(12)
      FXHE = FX(12)
      EMAX = 1.0D0 + FXHE
      TI = 1.0D0/T
C BEGIN SAHA ROUTINE
C COMPUTE SAHA K'S
      STEMP = 2.50D0*TL - PL + CMKH
      NZ1 = 1
      DO 11 I=1,NZ
         SAHATT(I) = SAHAT(I)*TI
         SAHAK(I) = CLN*(SAHAU(I) + STEMP) - SAHATT(I)
         IF(SAHAK(I).LT.-STOL) GO TO 12
         IF(SAHAK(I).GT.+STOL) GO TO 10
         SAHAK(I) = BETAI*DEXP(SAHAK(I))
         GO TO 11
 10      SAHAK(I) = 1.0D16
         NZ1 = I + 1
 11   CONTINUE
      I = NZ + 1
 12   NZ0 = I - 1
      NZ1 = MIN0(NZ,NZ1)
      LNOHE = .TRUE.
      LNOHE2= .TRUE.
      IF(FXHE.LT.1.0D-10) GO TO 13
      SAHEK0 = CLN*(SAHAU(12) + STEMP) - SAHET0/T
      IF(SAHEK0.LT.-STOL) GO TO 13
      LNOHE = .FALSE.
      SAHEK0 = BETAI*DEXP(SAHEK0)
      SAHEK1 = CLN*(SAHAU(13) + STEMP) - SAHET1/T
      IF(SAHEK1.LT.-STOL) GO TO 14
      LNOHE2= .FALSE.
      SAHEK1 = BETAI*DEXP(SAHEK1)
      GO TO 15
 13   SAHEX1 = 0.0D0
 14   SAHEX2 = 0.0D0
 15   CONTINUE
C BEGIN ITERATIONS FOR SOLUTION OF E
      DO 28 ISAHA=1,MAXS
         KSAHA = KSAHA + 1
         EP1 = 1.0D0/(1.0D0 + E)
         EP1E = EP1/E
         EP12 = EP1*EP1
         EEP1 = E*EP1
         C33 = -E*(1.0D0 + E)
         R3 = E
         IF(NZ0.LE.0) GO TO 22
         DO 21 I=1,NZ0
            DIV = 1.0D0/(SAHAK(I) + EEP1)
            TEMP8 = SAHAK(I)*DIV
            SAHAX(I) = TEMP8
            TEMP8 = TEMP8*FX(I)
            R3 = R3 - TEMP8
            TEMP8 = TEMP8*EEP1*DIV
            C33 = C33 - TEMP8
            FXS(I) = TEMP8
 21      CONTINUE
 22      C33 = C33*EP1E
         R3 = R3 - FXHE*(SAHEX1 + SAHEX2+SAHEX2)
         LFIN = DABS(R3).LT.STOLEE
         IF(LNOHE) GO TO 25
         C22 = SAHEK0 + EEP1
         C23 = SAHEX1*EP12
         C32 = FXHE
         R2 = SAHEK0*(1.0D0-SAHEX1-SAHEX2) - SAHEX1*EEP1
         IF(LNOHE2) GO TO 23
         C11 = EEP1
         C12 = -SAHEK1
         C13 = SAHEX2*EP12
         C21 = SAHEK0
         C31 = 2.0D0*FXHE
         R1 = SAHEX1*SAHEK1 - SAHEX2*EEP1
C REDUCTION OF SAHA MATRIX TO DIAGONAL FORM
         CR12 = - C21/C11
         CR13 = - C31/C11
         C22 = C22 + CR12*C12
         C32 = C32 + CR13*C12
         C23 = C23 + CR12*C13
         C33 = C33 + CR13*C13
         IF (R1.EQ.0.0D0) GO TO 210
         R1L=DLOG10(DABS(R1))
         IF (CR12.EQ.0.0D0) GO TO 200
         CR12L=DLOG10(DABS(CR12))
         FACT=CR12L+R1L
         IF (FACT.LT.-38.0D0) GO TO 200
         R2 = R2 + CR12*R1
 200     CONTINUE
         IF (CR13.EQ.0.0D0) GO TO 210
         CR13L=DLOG10(DABS(CR13))
         FACT=CR13L+R1L
         IF (FACT.LT.-38.0D0) GO TO 210
         R3 = R3 + CR13*R1
 210     CONTINUE
C ENTRY FOR NO FULLY IONIZED HELIUM (SAHEX2 = 0.0)
 23      CR23 = - C32/C22
         C33 = C33 + CR23*C23
         R3 = R3 + CR23*R2
C ENTRY FOR NEUTRAL HELIUM
 25      DELTE = R3/C33
         IF(LNOHE) GO TO 26
         DELTX1 = (R2 - C23*DELTE)/C22
         SAHEX1 = SAHEX1 + DELTX1
         SAHEX1 = DMAX1(0.0D0,DMIN1(1.0D0,SAHEX1))
         IF(LNOHE2) GO TO 26
CCC   STATEMENT RECALCULATED FOR DEC-20 SYSTEM
         IF (C12.EQ.0.D0 .OR. DELTX1.EQ.0.D0) GO TO 100
         C12L=DLOG10(DABS(C12))
         DELX1L=DLOG10(DABS(DELTX1))
         FACT1=C12L+DELX1L
         IF (FACT1.GE.-38.0D0) GO TO 100
         FACT1=-38.0D0
         FACT1=DEXP(CLN*FACT1)*DSIGN(1.0D0,C12)*DSIGN(1.0D0,DELTX1)
         GO TO 105
 100     CONTINUE
         FACT1=C12*DELTX1
 105     CONTINUE
         IF (C13.EQ.0.D0 .OR. DELTE.EQ.0.D0) GO TO 110
         C13L=DLOG10(DABS(C13))
         DELTEL=DLOG10(DABS(DELTE))
         FACT2=C13L+DELTEL
         IF (FACT2.GE.-38.0D0) GO TO 110
         FACT2=-38.0D0
         FACT2=DEXP(CLN*FACT2)*DSIGN(1.0D0,C13)*DSIGN(1.0D0,DELTE)
         GO TO 115
 110     CONTINUE
         FACT2=C13*DELTE
 115     CONTINUE
         DELTX2=(R1-FACT1-FACT2)/C11
         SAHEX2 = SAHEX2 + DELTX2
         SAHEX2 = DMAX1(0.0D0,DMIN1(1.0D0,SAHEX2))
 26      E = E + DELTE
         E = DMAX1(1.0D-11,DMIN1(EMAX,E))
         LFIN = LFIN .AND. DABS(DELTE).LT.STOLEE
         IF(LFIN) GO TO 29
 28   CONTINUE
      WRITE(ISHORT,99) TL,PL,E,DELTE
 99   FORMAT(' -----SAHA FAILURE (TL,PL)=',2F10.6,'  (E,DE)=',2F20.12)
C SYSTEM HAS BEEN SOLVED FOR E
 29   EMU = E*AMU
      RMU = CGAS*(EMU + AMU)
      D = BETA*P/(RMU*T)
      DL = DLOG10(D)
      FXION(1) = 0.0D0
      IF(NZ0.GE.7) FXION(1) = SAHAX(7)
      FXION(2) = SAHEX1
      FXION(3) = SAHEX2
      IF(LATMO) GO TO 60
C COMPUTE FIRST DERIVATIVES
      RMUB = RMU*BETAI
      R3T = 0.0D0
      R3P = 0.0D0
      IF(NZ0.LE.0) GO TO 31
      DO 30 I=NZ1,NZ0
         R3P = R3P - FXS(I)
C KC 2025-05-30 fixed "DO termination statement which is not END DO or CONTINUE"
C  30   R3T = R3T -FXS(I)*(2.5D0 + BETA14 + SAHATT(I))
         R3T = R3T -FXS(I)*(2.5D0 + BETA14 + SAHATT(I))
 30   CONTINUE
      R3P = -BETAI*R3P
 31   IF(LNOHE) GO TO 33
      SAHEX0 = 1.0D0 - SAHEX1 - SAHEX2
      SK0QT = 2.5D0 + BETA14 + SAHET0*TI
      TEMP = SAHEK0*SAHEX0
      R2T = TEMP*SK0QT
      R2P = -TEMP*BETAI
      IF(LNOHE2) GO TO 32
      SK1QT = 2.5D0 + BETA14 + SAHET1*TI
      TEMP = SAHEK1*SAHEX1
      R1T = TEMP*SK1QT
      R1P = -TEMP*BETAI
      R2T = R2T + CR12*R1T
      R2P = R2P + CR12*R1P
      R3T = R3T + CR13*R1T
      R3P = R3P + CR13*R1P
 32   R3T = R3T + CR23*R2T
      R3P = R3P + CR23*R2P
 33   SQET = R3T/C33
      SQEP = R3P/C33
      QDT = -1.0D0 - BETA14 - EP1*SQET
      QDP = BETAI - EP1*SQEP
C COMPUTE INTERNAL ENERGY TEMPERATURE DERIVATIVE(QUT)
      USUM = 0.0D0
      IF(LNOHE) GO TO 35
      SX1QT = (R2T - C23*SQET)/C22
      SX1QP = (R2P - C23*SQEP)/C22
      SX2QT = 0.0D0
      SX2QP = 0.0D0
      IF(LNOHE2) GO TO 34
      SX2QT = (R1T - C12*SX1QT - C13*SQET)/C11
      SX2QP = (R1P - C12*SX1QP - C13*SQEP)/C11
 34   SX0QT = -(SX1QT + SX2QT)
      SX0QP = -(SX1QP + SX2QP)
      USUM = FXHE*(SX1QT*SAHET0 + SX2QT*(SAHET0 + SAHET1))
 35   IF(NZ0.LE.0) GO TO 37
      STEMP = 2.50D0 + BETA14 - EP1E*SQET
      DO 36 I=NZ1,NZ0
         FXT(I) = FXS(I)*(STEMP + SAHATT(I))
C KC 2025-05-30 fixed "DO termination statement which is not END DO or CONTINUE"
C  36   USUM = USUM + FXT(I)*SAHAT(I)
         USUM = USUM + FXT(I)*SAHAT(I)
 36   CONTINUE
 37   CONTINUE
      BETAUT = 0.75D0*(2.0D0 + BETA14)
      RAMU = CGAS*AMU
      QUT =RAMU*((1D0+E)*(BETAUT+3D0*BETAI*BETA14)+BETAUT*SQET+USUM*TI)
C COMPUTE SPECIFIC HEAT(QCP) AND ADIABATIC GRADIENT(DELA)
      PDT = P/(D*T)
      PDTQ = PDT*QDT
      QCP = QUT - PDTQ
      QCPI = 1.0D0/QCP
      DELA = -PDTQ*QCPI
      IF(.NOT.LDERIV) GO TO 60
C COMPUTE DERIVATIVES OF QDT,QCP,DELA
      BETA16 = 4.0D0*BETAI*BETA14
      R3T = 0.0D0
      R3P = 0.0D0
      UTSUM = 0.0D0
      UPSUM = 0.0D0
      IF(NZ0.LE.0) GO TO 42
      ETEMP = (1.0D0+E+E)/(E*(1.0D0+E))**2
      STEMP1 = 2.5D0 + BETA14 - SQET*EP1E
      STEMP2 = -BETAI - SQEP*EP1E
      STEMP3 = ETEMP*SQEP*SQET - BETAI*BETA14
      STEMP4 = ETEMP*SQET**2 + BETA16
      DO 41 I=NZ1,NZ0
         STEMP5 = (STEMP1 + SAHATT(I))*(1.0D0 - 2.0D0*SAHAX(I))
         STEMP6 = FXS(I)*(STEMP4 - SAHATT(I)) + FXT(I)*STEMP5
         R3T = R3T - STEMP6
         UTSUM = UTSUM + SAHAT(I)*(STEMP6 - FXT(I))
         STEMP7 = FXS(I)*(STEMP3 + STEMP2*STEMP5)
         R3P = R3P - STEMP7
C KC 2025-05-30 fixed "DO termination statement which is not END DO or CONTINUE"
C  41   UPSUM = UPSUM + SAHAT(I)*STEMP7
         UPSUM = UPSUM + SAHAT(I)*STEMP7
 41   CONTINUE
 42   CONTINUE
      IF(LNOHE) GO TO 44
      STEMP = 2.0D0*SAHEX1*EP1*SQET
      R2T = SAHEK0*(SAHEX0*(BETA16-SAHET0*TI+SK0QT**2)+2D0*SX0QT*SK0QT)
     2     +EP12*(STEMP*SQET - 2.0D0*SX1QT*SQET)
      R2P = SAHEK0*(SAHEX0*BETAI*(-BETA14-SK0QT)+SX0QP*SK0QT-BETAI*
     2     SX0QT) + EP12*(STEMP*SQEP - SX1QP*SQET - SX1QT*SQEP)
      IF(LNOHE2) GO TO 43
      STEMP = 2.0D0*SAHEX2*EP1*SQET
      R1T = SAHEK1*(SAHEX1*(BETA16-SAHET1*TI+SK1QT**2)+2D0*SX1QT*SK1QT)
     1     +EP12*(STEMP*SQET - 2.0D0*SX2QT*SQET)
      R1P = SAHEK1*(SAHEX1*BETAI*(-BETA14-SK1QT)+SX1QP*SK1QT-BETAI*
     1     SX1QT) + EP12*(STEMP*SQEP - SX2QP*SQET - SX2QT*SQEP)
      R2T = R2T + CR12*R1T
      R2P = R2P + CR12*R1P
      R3P = R3P + CR13*R1P
      R3T = R3T + CR13*R1T
 43   R3P = R3P + CR23*R2P
      R3T = R3T + CR23*R2T
 44   SQETT = R3T/C33
      SQETP = R3P/C33
      QDTT = -BETA16 + (EP1*SQET)**2 - EP1*SQETT
      QDTP = BETAI*BETA14 + EP12*SQET*SQEP - EP1*SQETP
      IF(NZ0.LE.0) GO TO 46
      STEMP = EP1E*SQETT
      STEMP1 = EP1E*SQETP
      DO 45 I=NZ1,NZ0
         UTSUM = UTSUM - FXS(I)*SAHAT(I)*STEMP
C KC 2025-05-30 fixed "DO termination statement which is not END DO or CONTINUE"
C  45   UPSUM = UPSUM - FXS(I)*SAHAT(I)*STEMP1
         UPSUM = UPSUM - FXS(I)*SAHAT(I)*STEMP1
 45   CONTINUE
 46   CONTINUE
      IF(LNOHE) GO TO 48
      SX1QTT = (R2T - C23*SQETT)/C22
      SX1QTP = (R2P - C23*SQETP)/C22
      IF(LNOHE2) GO TO 47
      SX2QTT = (R1T - C12*SX1QTT - C13*SQETT)/C11
      SX2QTP = (R1P - C12*SX1QTP - C13*SQETP)/C11
      UTSUM = UTSUM + FXHE*(SAHET0+SAHET1)*(SX2QTT - SX2QT)
      UPSUM = UPSUM + FXHE*(SAHET0+SAHET1)*SX2QTP
 47   UTSUM = UTSUM + FXHE*SAHET0*(SX1QTT - SX1QT)
      UPSUM = UPSUM + FXHE*SAHET0*SX1QTP
 48   CONTINUE
      BTEMP = (1.0D0+E)*BETA14*BETAI*(24.0D0*BETAI - 9.0D0)
      QQUTT = RAMU*(BTEMP+0.75D0*(2.0D0+BETA14*(8.0D0*BETAI+1D0))*SQET+
     .     BETAUT*SQETT + UTSUM*TI)
      QQUTP = RAMU*(-0.25D0*BTEMP+0.75D0*((2.0D0+BETA14*(4.0D0*BETAI
     .     +1.0D0))*SQEP-BETA14*BETAI*SQET) +BETAUT*SQETP+UPSUM*TI)
      QCPT = QCPI*(QQUTT + PDTQ*(1.0D0+QDT) - PDT*QDTT)
      QCPP = QCPI*(QQUTP - PDTQ*(1.0D0-QDP) - PDT*QDTP)
      QAT = -1.0D0 - QDT - QCPT + QDTT/QDT
      QAP = 1.0D0 - QDP - QCPP + QDTP/QDT
 60   CONTINUE

      RETURN
      END
