
C MHP 4/98  SUBROUTINE FOR READING IN ALEXANDER LOW T OPACITIES.
C
C ALEXANDER OPACITIES   APJ,437,879,1994
C IN EACH 7 FILE FOR X = 0.0, 0.1, 0.2, 0.35, 0.5, 0.7, 0.8
C DESCENDING ORDER OF Z = 0.0, 0.00001, 0.00003, 0.0001, 0.0003,
C     (15)               0.001, 0.002, 0.004, 0.01, 0.02, 0.03,
C                        0.04, 0.06, 0.08, 0.10
C DESCENDING ORDER OF LOGT  4.10 4.05 4.00 3.95 3.90 3.85 3.80 3.75
C     (23)                 3.70 3.65 3.60 3.55 3.50 3.45 3.40 3.35
C                          3.30 3.25 3.20 3.15 3.10 3.05 3.00
C ASCENDING ORDER OF  LOGR -7.0 -6.5 -6.0 -5.5 -5.0 -4.5 -4.0 -3.5
C     (17)                -3.0 -2.5 -2.0 -1.5 -1.0 -0.5  0.0  0.5  1.0
C WHERE R = RHO/T_6**3
C READ IN ALL Z VALUES AT FIXED X AND GENERATE OPACITY ENTRIES AT
C EITHER ONE OR TWO FIXED VALUES OF Z.  THEN GENERATE SURFACE X TABLE
C IF MODEL HAS NO DIFFUSION.  INTERPOLATION BETWEEN COMPOSITIONS IS
C 4-POINT LAGRANGIAN.
C
      SUBROUTINE ALXTBL(OPECALEX)
      IMPLICIT REAL*8 (A-H,O-Z)
      IMPLICIT LOGICAL*4(L)
      PARAMETER (NUMX=7)
      PARAMETER (NUMZ=15)
      PARAMETER (NUMXZ=105)
      PARAMETER (NUMT=23)
      PARAMETER (NUMD=17)
      PARAMETER (NUMXT=8)
      CHARACTER*256 OPECALEX(7)
C MHP 8/25 Removed all character strings from common blocks
      COMMON /ALEXO/IALXO
C OPACITY COMMON BLOCKS - modified 3/09
      COMMON /NEWOPAC/ZLAOL1,ZLAOL2,ZOPAL1,ZOPAL2, ZOPAL951,
     +       ZALEX1, ZKUR1, ZKUR2,TMOLMIN,TMOLMAX,LALEX06,
     +       LLAOL89,LOPAL92,LOPAL95,LKUR90,LALEX95,L2Z
C     ALEX LOW T OPACITY
      COMMON /GALOT/TGR(NUMT),XXG(NUMX),R0GR(NUMD),ZZG(NUMZ)
      COMMON /ALOT/CAPALEX(NUMXT,NUMT,NUMD),XE,ZE,IX,IT,ID
      COMMON /ALOTALL/CAPTALEX(NUMXZ,NUMT,NUMD)
C MHP 10/02 ISHORT UNDECLARED
      COMMON/LUOUT/ILAST,IDEBUG,ITRACK,ISHORT,IMILNE,IMODPT,ISTOR,IOWR
C     LOCAL ARRAYS
      REAL*8 CAPTMP(NUMD)
      DATA XXG/0.0D0,0.1D0,0.2D0,0.35D0,0.5D0,0.7D0,0.8D0/
      DATA ZZG/0.0D0, 0.00001D0, 0.00003D0, 0.0001D0, 0.0003D0,
     +         0.001D0, 0.002D0, 0.004D0, 0.01D0, 0.02D0, 0.03D0,
     +         0.04D0, 0.06D0, 0.08D0, 0.10D0/
      DATA TGR/3.00D0,3.05D0,3.10D0,3.15D0,3.20D0,3.25D0,3.30D0,
     *         3.35D0,3.40D0,3.45D0,3.50D0,3.55D0,3.60D0,3.65D0,
     *         3.70D0,3.75D0,3.80D0,3.85D0,3.90D0,3.95D0,4.00D0,
     *         4.05D0,4.10D0/
      DATA R0GR/-7.0D0,-6.5D0,-6.0D0,-5.5D0,-5.0D0,-4.5D0,-4.0D0,
     *          -3.5D0,-3.0D0,-2.5D0,-2.0D0,-1.5D0,-1.0D0,-0.5D0,
     *           0.0D0, 0.5D0, 1.0D0/
C INITIALIZE INDEX OF PREVIOUS CLOSEST POINTS AND ENVELOPE ABUNDANCES
      DATA XE,ZE,IX,IT,ID/0.0D0,0.0D0,4,12,9/
      SAVE
      DO IOP=1,NUMX
C OPEN EACH OF THE TABLES AT FIXED X WITH A RANGE OF Z.
         OPEN(UNIT=IALXO,FILE=OPECALEX(IOP),STATUS='OLD',
     *        FORM='FORMATTED')
C READ IN INITIAL X AND Z; ENSURE THAT THEY HAVE THE EXPECTED VALUES.
         DO I = NUMZ,1,-1
C INDEX FOR STORING TABLES : 15 SETS OF METAL ABUNDANCE WITH 7 SETS
C OF HYDROGEN FOR EACH.  THESE ARE STORED IN THE ORDER (X,Z) OF
C (0,0),(0.1,0),...(0.8,0),(0,0.00001),...
            II = IOP + 7*(I-1)
C HEADER INFORMATION: X AND Z
            READ(IALXO,10)XX,ZZ
 10         FORMAT(18X,F6.2,2X,F7.2)
            IF(XX.NE.XXG(IOP) .OR. ZZ.NE.ZZG(I))THEN
               WRITE(ISHORT,20)XX,XXG(IOP),ZZ,ZZG(I)
 20            FORMAT(1X,'ERROR IN ALEXANDER OPACITY TABLES:'/
     *         1X,'EXPECTED AND ACTUAL X,Z',4F7.2,' RUN STOPPED')
               STOP
            ENDIF
C OPACITY INFORMATION AT EACH SHELL: CHECK FOR CONSISTENCY WITH T,
C STARTING R.  STORE IN A NUMZ*NUMT*NUMR ARRAY.
            DO J = NUMT,1,-1
               READ(IALXO,30) IT,ND,T,R0,(CAPTMP(K),K=1,NUMD)
               DO K = 1, NUMD
                  CAPTALEX(II,J,K) = CAPTMP(K)
               END DO
 30            FORMAT(I2,I3,F6.3,F5.1,8F8.3/9F8.3)
               IF(ND.NE.17 .OR. T.NE.TGR(J) .OR. R0.NE.R0GR(1))THEN
                  WRITE(ISHORT,40)ND,T,TGR(J),R0,R0GR(1)
 40               FORMAT(1X,'ERROR IN ALEXANDER OPACITY TABLES:'/
     *            1X,'EXPECTED AND ACTUAL T,RHO',I3,4F7.2,
     *            ' RUN STOPPED')
                  STOP
               ENDIF
            END DO
         END DO
         CLOSE(UNIT=IALXO)
      END DO
      ZZ = ZALEX1
      CALL ALXZTAB(ZZ)
      RETURN
      END
