C $$$$$$
C       SUBROUTINE SETUPV(HD,HG,HL,HP,HR,HS1,HT,IMIN,IMAX,LCZ,M,HRU,  ! KC 2025-05-31
      SUBROUTINE SETUPV(HD,HG,HL,HP,HR,HS1,HT,IMIN,IMAX,M,HRU,
     *                  QWRMAX)

      PARAMETER (JSON=5000)
      IMPLICIT REAL*8(A-H,O-Z)
      IMPLICIT LOGICAL*4(L)
      COMMON/CONST/CLSUN,CLSUNL,CLNSUN,CMSUN,CMSUNL,CRSUN,CRSUNL,CMBOL
      COMMON/CONST1/CLN,CLNI,C4PI,C4PIL,C4PI3L,CC13,CC23,CPI
      COMMON/CONST2/CGAS,CA3,CA3L,CSIG,CSIGL,CGL,CMKH,CMKHN
      COMMON/MDPHY/AMUM(JSON),CPM(JSON),DELM(JSON),DELAM(JSON),
     *             DELRM(JSON),ESUMM(JSON),OM(JSON),QDTM(JSON),
     *             THDIFM(JSON),VELM(JSON),VISCM(JSON),EPSM(JSON)
C MHP 06/02 ADDED FACT7 AND FACT8 FOR DIF/AD TREATMENT
      COMMON/VFACT/FACT1(JSON),FACT2(JSON),FACT3(JSON),FACT4(JSON),
     *     FACT5(JSON),FACT7(JSON),FACT8(JSON)
      COMMON/INTFAC/FACI(4,JSON)
C MHP 3/92 COMMON BLOCK ADDED FOR SHEAR VELOCITY
      COMMON/TAUKH/FACT6(JSON),FES1(JSON),FES2(JSON),FGSFJ(JSON),
     *             FGSFK(JSON),FES3(JSON)
      COMMON/INTVAR/ALM(JSON),DELAMI(JSON),DELMI(JSON),DM(JSON),
     *              EPSILM(JSON),HGM(JSON),HS3(JSON),PM(JSON),
     *              QDTMI(JSON),RM(JSON),TM(JSON)
C MHP 06/02
C Time change of theta
      COMMON/OLDROT2/THO(JSON),THN(JSON),THM(JSON),
     *               DDELM(JSON),FESTIME(JSON),THP(JSON),
     *               QWRST(JSON),WMST(JSON),QWRMST(JSON)
C CAPPA AND EPSILON DERIVATIVES
      COMMON/ROTDER/SQOD(JSON),SQOT(JSON),SQED(JSON),SQET(JSON),
     *              FRACNUC(JSON)
C DEFINITION TERMS FOR THE SECOND AND THIRD DERIVATIVE
C TERMS IN THE ZAHN FORMULATION
      COMMON/EGRIDDER/EQQCOD(JSON),EQQQCOD(JSON),QQCOD(JSON),
     *                QQQCOD(JSON)
C MHP 06/02
C HIGHER ORDER TERMS IN M.C. VELOCITY
      COMMON/DIFAD3/FACD2(JSON),FACD3(JSON),VESD2(JSON),VESD3(JSON),
     *              ECOD5(JSON),ECOD6(JSON),FGEOM(JSON),FV0(JSON),
     *              FV1A(JSON),FV1B(JSON),FV2A(JSON),FV2B(JSON),
     *              EV0(JSON),EV1A(JSON),EV1B(JSON),EV2A(JSON),
     *              EV2B(JSON),DSS(JSON),DGSF(JSON),ESS(JSON),EGSF(JSON)
      COMMON/VARFC/VFC(JSON),LVFC,LDIFAD
C JvS 09/25 CHANGED CPM --> CPMI TO AVOID CONFLICT IN MDPHY      
      DIMENSION HD(JSON),HG(JSON),HL(JSON),HP(JSON),HR(JSON),HS1(JSON),
C      *          HT(JSON),LCZ(JSON),HRU(JSON),QWRMAX(JSON),  ! KC 2025-05-31
     *          HT(JSON),HRU(JSON),QWRMAX(JSON),
     *          CPMI(JSON),OPM(JSON)
      SAVE
C   THE PROCEDURE FOR CALCULATING STABILITY AGAINST ROTATIONALLY INDUCED
C   MIXING IS AS FOLLOWS:
C      STABILITY IS CALCULATED FOR THE I/I-1 INTERFACE; QUANTITIES RELATED
C      TO STABILITY AT THIS INTERFACE ARE STORED IN ARRAY ELEMENT(S) I.
C      EACH STABILITY CRITERION IS EXPRESSED AS FOLLOWS:
C         A COMBINATION OF VARIABLES(RHO,P,ETC.)STORED AT EACH SHELL
C         MULTIPLIED BY A GRADIENT BETWEEN THE SHELLS MUST BE LESS THAN
C         SOME CRITICAL NUMBER.
C  SETUPV CALCULATES THE FACTORS WHICH ARE BASED ON
C  QUANTITIES WHICH DO NOT CHANGE DURING A DIFFUSION TIMESTEP.
C
C  FIND UNLOGGED RADII OF THE MODEL POINTS.
      DO 5 I = 1,M
         HRU(I) = EXP(CLN*HR(I))
    5 CONTINUE
C  FIND LOCATION (IN RADIUS) OF THE MIDPOINTS OF THE INTERFACES.
      DO 10 I = 2,M
         RM(I) = 0.5D0*(HRU(I) + HRU(I-1))
   10 CONTINUE
C  FIND 4 POINT LAGRANGIAN INTERPOLATION FACTORS FOR ALL INTERFACES.
C  INTERFACE BETWEEN FIRST AND SECOND POINT USES THE FIRST 4 POINTS FOR
C  INTERPOLATION; BETWEEN LAST AND SECOND TO LAST USES THE LAST FOUR POINTS
C  AND BETWEEN I AND I-1 USES I-2,I-1,I,I+1.
C  TREATMENT OF FIRST INTERFACE.
      IF(IMIN.LT.3)THEN
         A43 = HRU(4) - HRU(3)
         A42 = HRU(4) - HRU(2)
         A41 = HRU(4) - HRU(1)
         A32 = HRU(3) - HRU(2)
         A31 = HRU(3) - HRU(1)
         A21 = HRU(2) - HRU(1)
         D1 = -A21*A31*A41
         D2 = A21*A32*A42
         D3 = -A31*A32*A43
         D4 = A41*A42*A43
         XA1 = RM(2) - HRU(1)
         XA2 = RM(2) - HRU(2)
         XA3 = RM(2) - HRU(3)
         XA4 = RM(2) - HRU(4)
         FACI(1,2) = (XA2*XA3*XA4)/D1
         FACI(2,2) = (XA1*XA3*XA4)/D2
         FACI(3,2) = (XA1*XA2*XA4)/D3
         FACI(4,2) = (XA1*XA2*XA3)/D4
         I0 = 3
         PM(2)=EXP(CLN*(HP(1)*FACI(1,2)+HP(2)*FACI(2,2)
     *         +HP(3)*FACI(3,2)+HP(4)*FACI(4,2)))
         TM(2)=EXP(CLN*(HT(1)*FACI(1,2)+HT(2)*FACI(2,2)
     *         +HT(3)*FACI(3,2)+HT(4)*FACI(4,2)))
         DM(2)=EXP(CLN*(HD(1)*FACI(1,2)+HD(2)*FACI(2,2)
     *         +HD(3)*FACI(3,2)+HD(4)*FACI(4,2)))
         DELMI(2)=DELRM(1)*FACI(1,2)+DELRM(2)*FACI(2,2)+
     *            DELRM(3)*FACI(3,2)+DELRM(4)*FACI(4,2)
         DELAMI(2)=DELAM(1)*FACI(1,2)+DELAM(2)*FACI(2,2)+
     *             DELAM(3)*FACI(3,2)+DELAM(4)*FACI(4,2)
         QDTMI(2)=QDTM(1)*FACI(1,2)+QDTM(2)*FACI(2,2)+
     *           QDTM(3)*FACI(3,2)+QDTM(4)*FACI(4,2)
         HS3(2)=HS1(1)*FACI(1,2)+HS1(2)*FACI(2,2)+
     *          HS1(3)*FACI(3,2)+HS1(4)*FACI(4,2)
         EPSILM(2)=ESUMM(1)*FACI(1,2)+ESUMM(2)*FACI(2,2)+
     *           ESUMM(3)*FACI(3,2)+ESUMM(4)*FACI(4,2)
         ALM(2)=CLSUN*(HL(1)*FACI(1,2)+HL(2)*FACI(2,2)+
     *          HL(3)*FACI(3,2)+HL(4)*FACI(4,2))
         HGM(2)=HG(1)*FACI(1,2)+HG(2)*FACI(2,2)+
     *          HG(3)*FACI(3,2)+HG(4)*FACI(4,2)
C  opacity.
         OPM(2)=OM(1)*FACI(1,2)+OM(2)*FACI(2,2)+
     *          OM(3)*FACI(3,2)+OM(4)*FACI(4,2)
C  specific heat
         CPMI(2)=CPM(1)*FACI(1,2)+CPM(2)*FACI(2,2)+
     *          CPM(3)*FACI(3,2)+CPM(4)*FACI(4,2)
      ELSE
         I0 = IMIN
      ENDIF
C  TREATMENT OF LAST INTERFACE.
      IF(IMAX.EQ.M)THEN
         A43 = HRU(M) - HRU(M-1)
         A42 = HRU(M) - HRU(M-2)
         A41 = HRU(M) - HRU(M-3)
         A32 = HRU(M-1) - HRU(M-2)
         A31 = HRU(M-1) - HRU(M-3)
         A21 = HRU(M-2) - HRU(M-3)
         D1 = -A21*A31*A41
         D2 = A21*A32*A42
         D3 = -A31*A32*A43
         D4 = A41*A42*A43
         XA1 = RM(M) - HRU(M-3)
         XA2 = RM(M) - HRU(M-2)
         XA3 = RM(M) - HRU(M-1)
         XA4 = RM(M) - HRU(M)
         FACI(1,M) = (XA2*XA3*XA4)/D1
         FACI(2,M) = (XA1*XA3*XA4)/D2
         FACI(3,M) = (XA1*XA2*XA4)/D3
         FACI(4,M) = (XA1*XA2*XA3)/D4
         I1 = M-1
         PM(M)=EXP(CLN*(HP(M-3)*FACI(1,M)+HP(M-2)*FACI(2,M)
     *         +HP(M-1)*FACI(3,M)+HP(M)*FACI(4,M)))
         TM(M)=EXP(CLN*(HT(M-3)*FACI(1,M)+HT(M-2)*FACI(2,M)
     *         +HT(M-1)*FACI(3,M)+HT(M)*FACI(4,M)))
         DM(M)=EXP(CLN*(HD(M-3)*FACI(1,M)+HD(M-2)*FACI(2,M)
     *         +HD(M-1)*FACI(3,M)+HD(M)*FACI(4,M)))
         DELMI(M)=DELRM(M-3)*FACI(1,M)+DELRM(M-2)*FACI(2,M)+
     *            DELRM(M-1)*FACI(3,M)+DELRM(M)*FACI(4,M)
         DELAMI(M)=DELAM(M-3)*FACI(1,M)+DELAM(M-2)*FACI(2,M)+
     *             DELAM(M-1)*FACI(3,M)+DELAM(M)*FACI(4,M)
         QDTMI(M)=QDTM(M-3)*FACI(1,M)+QDTM(M-2)*FACI(2,M)+
     *           QDTM(M-1)*FACI(3,M)+QDTM(M)*FACI(4,M)
         HS3(M)=HS1(M-3)*FACI(1,M)+HS1(M-2)*FACI(2,M)+
     *          HS1(M-1)*FACI(3,M)+HS1(M)*FACI(4,M)
         EPSILM(M)=ESUMM(M-3)*FACI(1,M)+ESUMM(M-2)*FACI(2,M)+
     *           ESUMM(M-1)*FACI(3,M)+ESUMM(M)*FACI(4,M)
         ALM(M)=CLSUN*(HL(M-3)*FACI(1,M)+HL(M-2)*FACI(2,M)+
     *          HL(M-1)*FACI(3,M)+HL(M)*FACI(4,M))
         HGM(M)=HG(M-3)*FACI(1,M)+HG(M-2)*FACI(2,M)+
     *          HG(M-1)*FACI(3,M)+HG(M)*FACI(4,M)
C  opacity.
         OPM(M)=OM(M-3)*FACI(1,M)+OM(M-2)*FACI(2,M)+
     *          OM(M-1)*FACI(3,M)+OM(M)*FACI(4,M)
C  specific heat
         CPMI(M)=CPM(M-3)*FACI(1,M)+CPM(M-2)*FACI(2,M)+
     *          CPM(M-1)*FACI(3,M)+CPM(M)*FACI(4,M)
      ELSE
         I1 = IMAX
      ENDIF
C  COMPUTE INTERPOLATION FACTORS FOR ALL OTHER POINTS.
      DO 20 I = I0,I1
         A43 = HRU(I+1) - HRU(I)
         A42 = HRU(I+1) - HRU(I-1)
         A41 = HRU(I+1) - HRU(I-2)
         A32 = HRU(I) - HRU(I-1)
         A31 = HRU(I) - HRU(I-2)
         A21 = HRU(I-1) - HRU(I-2)
         D1 = -A21*A31*A41
         D2 = A21*A32*A42
         D3 = -A31*A32*A43
         D4 = A41*A42*A43
         XA1 = RM(I) - HRU(I-2)
         XA2 = RM(I) - HRU(I-1)
         XA3 = RM(I) - HRU(I)
         XA4 = RM(I) - HRU(I+1)
         FACI(1,I) = (XA2*XA3*XA4)/D1
         FACI(2,I) = (XA1*XA3*XA4)/D2
         FACI(3,I) = (XA1*XA2*XA4)/D3
         FACI(4,I) = (XA1*XA2*XA3)/D4
   20 CONTINUE
      CG = EXP(CLN*CGL)
      CG2 = CG**2
      DO 30 I = I0,I1
C  USE 4-POINT LAGRANGIAN INTERPOLATION TO FIND PHYSICAL VARIABLES
C  AT THE INTERFACES.
C  PRESSURE.
         PM(I)=EXP(CLN*(HP(I-2)*FACI(1,I)+HP(I-1)*FACI(2,I)
     *         +HP(I)*FACI(3,I)+HP(I+1)*FACI(4,I)))
C  TEMPERATURE.
         TM(I)=EXP(CLN*(HT(I-2)*FACI(1,I)+HT(I-1)*FACI(2,I)
     *         +HT(I)*FACI(3,I)+HT(I+1)*FACI(4,I)))
C  DENSITY.
         DM(I)=EXP(CLN*(HD(I-2)*FACI(1,I)+HD(I-1)*FACI(2,I)
     *         +HD(I)*FACI(3,I)+HD(I+1)*FACI(4,I)))
C  DEL (ACTUAL).
C  DEL (RADIATIVE) IS INTERPOLATED, AND DEL IS THE MIN OF DELA,DELR.
         DELMI(I)=DELRM(I-2)*FACI(1,I)+DELRM(I-1)*FACI(2,I)+
     *            DELRM(I)*FACI(3,I)+DELRM(I+1)*FACI(4,I)
C  DEL(ADIABATIC).
         DELAMI(I)=DELAM(I-2)*FACI(1,I)+DELAM(I-1)*FACI(2,I)+
     *             DELAM(I)*FACI(3,I)+DELAM(I+1)*FACI(4,I)
C  D LN RHO/D LN T.
         QDTMI(I)=QDTM(I-2)*FACI(1,I)+QDTM(I-1)*FACI(2,I)+
     *           QDTM(I)*FACI(3,I)+QDTM(I+1)*FACI(4,I)
C  UNLOGGED MASS INTERIOR TO THE INTERFACE.
         HS3(I)=HS1(I-2)*FACI(1,I)+HS1(I-1)*FACI(2,I)+
     *          HS1(I)*FACI(3,I)+HS1(I+1)*FACI(4,I)
C  SPECIFIC ENERGY GENERATION RATE.
         EPSILM(I)=ESUMM(I-2)*FACI(1,I)+ESUMM(I-1)*FACI(2,I)+
     *           ESUMM(I)*FACI(3,I)+ESUMM(I+1)*FACI(4,I)
C  LUMINOSITY.
         ALM(I)=CLSUN*(HL(I-2)*FACI(1,I)+HL(I-1)*FACI(2,I)+
     *          HL(I)*FACI(3,I)+HL(I+1)*FACI(4,I))
C  LOCAL AVERAGE FORCE OF GRAVITY.
         HGM(I)=HG(I-2)*FACI(1,I)+HG(I-1)*FACI(2,I)+
     *          HG(I)*FACI(3,I)+HG(I+1)*FACI(4,I)
C  opacity.
         OPM(I)=OM(I-2)*FACI(1,I)+OM(I-1)*FACI(2,I)+
     *          OM(I)*FACI(3,I)+OM(I+1)*FACI(4,I)
C  specific heat
         CPMI(I)=CPM(I-2)*FACI(1,I)+CPM(I-1)*FACI(2,I)+
     *          CPM(I)*FACI(3,I)+CPM(I+1)*FACI(4,I)
   30 CONTINUE
      DO 35 I = IMIN,IMAX
         DELMI(I) = MIN(DELMI(I),DELAMI(I))
   35 CONTINUE
      DO I = 1,M
         FES1(I) = 0.0D0
         FES2(I) = 0.0D0
         FES3(I) = 0.0D0
         FGSFJ(I) = 0.0D0
         FGSFK(I) = 0.0D0
         FACT1(I) = 0.0D0
         FACT2(I) = 0.0D0
         FACT3(I) = 0.0D0
         FACT4(I) = 0.0D0
         FACT5(I) = 0.0D0
C MHP 06/02
         FESTIME(I) = 0.0D0
         THM(I) = 0.0D0
         FACT7(I) = 0.0D0
         FACT8(I) = 0.0D0
      END DO
      DO I = 2,M
C ADDED FOR D THETA/DT TERM FROM ZAHN&MAEDER 1998
         FAC = 2.0D0*(HR(I)+HR(I-1))-0.5D0*
     *         (LOG10(HS1(I))+LOG10(HS1(I-1)))-CGL
         THM(I) = EXP(CLN*FAC)
      END DO
C  NOW COMPUTE STRUCTURAL QUANTITIES NEEDED TO EVALUATE VELOCITIES AT
C  ALL INTERFACES.
      CPIGI = 4.0D0/C4PI/CG
      DO 40 I = IMIN,IMAX
         IF(.NOT.LDIFAD)THEN
            DELMU = (LOG10(AMUM(I))-LOG10(AMUM(I-1)))/
     *              (HP(I)-HP(I-1))
         ELSE
            DELMU = 0.0D0
         ENDIF
         IF(I.EQ.IMIN)THEN
            DMIN=MAX(1.0D-3,0.5D0*(DELAM(IMIN+1)-DELM(IMIN+1))
     *               +DELMU)
         ELSE IF(I.EQ.IMAX)THEN
            DMIN=MAX(1.0D-3,0.5D0*(DELAM(IMAX-1)-DELM(IMAX-1))
     *               +DELMU)
         ELSE
            DMIN = 1.0D-3
         ENDIF
         DDEL = MAX(DELAMI(I)-DELMI(I),DMIN)
C MHP 06/02
C ADDED FOR ALTERNATE TREATMENT OF MU GRADIENTS
C         DDELM(I) = 0.5D0*(DELAMI(I)+DELAMI(I-1)-
C     *                     DELMI(I)-DELMI(I-1))
C         DDELM(I) = DDEL
         DDELM(I) = MAX(DELAMI(I)-DELMI(I)+DELMU,DMIN)
C         FESTIME(I) = PM(I)/(HGM(I)*DDEL*DM(I)*TM(I))
         FESTIME(I) = PM(I)/(HGM(I)*DDEL*DM(I))
         HPSC = PM(I)*RM(I)**2/DM(I)/HS3(I)/CG
         HTSC = HPSC/DELMI(I)
         ETA = 2.0D0*CC23*RM(I)**3/CG/HS3(I)
C        TTHERM = 8.0d0*CC23*CSIG*TM(I)**3/OPM(I)/DM(I)**2/CPM(I)
         FGSFK(I)= 8.0D0*HPSC*ETA/DDEL
         FF = PM(I)/(HGM(I)*DDEL*CPMI(I)*DM(I)*TM(I))
         FAC = 2.0D0*ETA*FF
         EM = ALM(I)/HS3(I)
         FES1(I) = FAC*(EM-EPSILM(I))
         FES2(I)= -0.5D0*FAC*EM*CPIGI/DM(I)
         FES3(I) = EM*FF*CC13*CPIGI*RM(I)/DM(I)
C         FES3(I) = EM*FF*CPIGI*(3.0D0*HTSC-RM(I))/DM(I)
         FV0(I) = FF
         FV1A(I) = FES1(I)/FF
         FV1B(I) = FES2(I)/FF
         FV2A(I) = EM*CPIGI*3.0D0*HTSC/DM(I)
         FV2B(I) = -EM*CPIGI*RM(I)/DM(I)
         FGSFJ(I) = ABS(FAC*EM*HTSC)*RM(I)
C  EDDINGTON CIRCULATION VELOCITY IS DEFINED AS
C  VES = FACT1*FACT2*OMEGA**2 (ENDAL AND SOFIA PAPER II).
C  NOTE THAT TO AVOID OVERFLOW 1/(DEL(AD)-DEL)IS SET TO A MAXIMUM OF 10^6.
C  THIS SHOULD ONLY BE AN ISSUE IF YOU HAVE ZERO OVERSHOOT AT THE BOUNDARY
C  OF A CONVECTION ZONE.  CAVEAT EMPTOR.
         FACT1(I) = 1.0D0/QDTMI(I)/MAX(DELAMI(I)-DELMI(I),1.0D-3)
C         FACT2(I) = DELAMI(I)*ALM(I)*(RM(I)**3/CG2/HS3(I)**2)*
C     *              (2.0D0*RM(I)**2*(EPSILM(I)/ALM(I) - 1.0D0/HS3(I))
C    *              - 3.0D0/(C4PI*DM(I)*RM(I)))
         FAC = DELAMI(I)/HGM(I)
         FACT2(I) = FAC*ETA*(EPSILM(I)-EM)
         FACT6(I) = -FAC*EM/C4PI/CG/DM(I)/RM(I)
C GSF VELOCITY IS DEFINED AS
C VGSF = VES*FACT3/Hj**2/(2OMEGA/(D OMEGA/D LNR) + 1)
C WHERE HJ IS THE SPECIFIC ANGULAR MOMENTUM SCALE HEIGHT.
C AND FACT3 IS THE TEMPERATURE SCALE HEIGHT TIMES THE RADIUS.
C  HT = (DEL*D(LN P)/DR)**-1 = P*R**2/(DEL*RHO*GM)
C        FACT3(I) = PM(I)*RM(I)**3/(DELMI(I)*DM(I)*CG*HS3(I))
         FACT3(I) = ABS(HTSC*RM(I))
C  FICTITIOUS MU CURRENTS THAT OPPOSE ES AND GSF CIRCULATION CALCULATED HERE.
C  VMU = FMU*FACT1*FACT4*mu*del(mu), FACT4=(D RHO/D MU)*PSCALH/TKH/MU
C  (KIPPENHAHN, IAU#66,P.22) USING TKH* = THE LOCAL KELVIN-HELMHOLTZ TIMESCALE.
C  FMU IS A USER PARAMETER, DMU IS DELTA MU BETWEEN THE SHELLS, AND QDMU IS
C  THE DERIVATIVE OF THE DENSITY WITH RESPECT TO MU.
C  IF VMU EXCEEDS VES AND VGSF THE INTERFACE IS STABLE.
C  D RHO/DMU = (1-(a/3)*T**4/P)*P*MU/(RHO*T*CGAS)
C  THE PRESSURE SCALE HEIGHT IS CGAS*T*R**2/GM (EXCLUDING A FACTOR MU
C  WHICH CANCELS WITH ANOTHER FACTOR OF MU WHICH ARISES ELSEWHERE) AND
C  THE KELVIN-HELMHOLTZ TIMESCALE IS G*M**2/(R*L).
C         FACT4(I) = ALM(I)*(RM(I)/HS3(I))**3/CG2/DM(I)*
C     *              (PM(I)-CA3*TM(I)**4)
         FACT4(I) = RM(I)**2/HS3(I)/CG/DM(I)*
     *              (PM(I)-CA3*TM(I)**4)/SQRT(HGM(I))
C  DYNAMICAL SHEAR INSTABILITY.
C  AN INTERFACE IS STABLE AGAINST THIS SHEAR WHENEVER THE RICHARDSON NUMBER
C  RICHNO = (RHO/P)*(DEL(AD)-DEL)*g**2/(D OMEGA/D LN R)**2>.25.
         QWRMAX(I)=SQRT(DM(I)/PM(I)*MAX(DELAMI(I) - DELMI(I),1.0D-3))
     *             *2.0D0*HGM(I)
C  THE DIFFUSIVE SHEAR IS INHIBITED BY MU GRADIENTS.
C  AN INTERFACE IS STABLE AGAINST THE DIFFUSIVE SHEAR IF
C  RICHARDSON NUMBER = FACT5*DMU/MU/(D OMEGA/D LNR)**2 > .25, WHERE
C  FACT5 = RHO/P*(-d lnT/d lnMU)/(del LN P)*G**2 AND
C   -d lnT/d lnMU = (CON-1)/(1+3CON),CON=(a/3)T**4/P
C  GIVEN (1 - CON)P = CGAS*RHO*T/MU
C  1 - CON IS BETA(CORRECTION FOR RADIATION PRESSURE).
         FACT5(I) = DM(I)*HGM(I)**2/PM(I)/CLN/(HP(I)-HP(I-1))*
     *   (CA3*TM(I)**4/PM(I)-1.0D0)/(1.0D0 + 3.0D0*CA3*TM(I)**4/PM(I))
C MHP 3/92 ADD VECTOR FOR LOCAL KELVIN-HELMHOLTZ TIME SCALE.
C         TKH(I) = CG*HS3(I)**2/ABS(ALM(I))/RM(I)
   40 CONTINUE
C MHP 06/02 ADDED TERMS OF ORDER DW/DR FROM ZAH&MAEDER 1998
      IF(LDIFAD)THEN
         HTM = EXP(CLN*(HP(IMIN-1)+2.0D0*HR(IMIN-1)-HD(IMIN-1)))
     *         /HS1(IMIN-1)/CG/DELRM(IMIN-1)
         QQQCOD(IMIN-1) = HTM
         DO I = IMIN,IMAX
C         DDEL = MAX(DELAMI(I)-DELMI(I),1.0D-3)
         HPSC = PM(I)*RM(I)**2/DM(I)/HS3(I)/CG
         HTSC = HPSC/DELMI(I)
         F1 = PM(I)/(HGM(I)*DDELM(I)*CPMI(I)*DM(I)*TM(I))
         F2 = ALM(I)*RM(I)/HS3(I)/3.0D0
         F3 = 0.75D0*HS3(I)/(CPI*DM(I)*RM(I)**3)
         V0 = -F1*F2*F3
C         V0 = -PM(I)*ALM(I)/(C4PI*CG**2*HS3(I)*DDEL*CPM(I)*
C     *         DM(I)**2*TM(I))
         FF = RM(I)**3/HS3(I)
         C1 = CC23*RM(I)**4/CG/HS3(I)
         QQCOD(I) = C1
         QC1R = 4.0D0*CC23*FF/CG*
     *          (1.0D0-CPI*DM(I)*FF)
         DR = 10.0D0**HR(I)-10.0D0**HR(I-1)
         QDR = (10.0D0**HD(I)-10.0D0**HD(I-1))/DR
         QQC1RR = 8.0D0*FF/CG/RM(I)*
     *   (1.0D0-CC13*CPI*FF*(1.0D1*DM(I)-RM(I)*QDR)
     *    + CC13*8.0D0*(CPI*DM(I)*FF)**2)
C D LN CHI/D LN T = 3 - D LN CAPPA/D LN T
         QCHIT = 3.0D0 - 0.5D0*(SQOT(I)+SQOT(I-1))
         QQCHITR = (SQOT(I-1)-SQOT(I))/DR
         HTP = EXP(CLN*(HP(I)+2.0D0*HR(I)-HD(I)))/HS1(I)/CG/DELM(I)
         QQQCOD(I) = HTP
         HTP2 = DR/CLN/(HT(I-1)-HT(I))
         QHTR = (ABS(HTP)-ABS(HTM))/DR
         HTM = HTP
         QETM = 0.5D0*(SQET(I)+SQET(I-1))
         FNU = 0.5D0*(FRACNUC(I)+FRACNUC(I-1))
C         FACT7(I)= -V0*(QQCHITR*C1+QCHIT*QC1R)
C         FACT7(I)= -V0*(QQCHITR*C1)
         FACT7(I)=
     *   - F1*C1*(FNU*QETM + EPSILM(I)*(1.0D0 - FNU - QCHIT))
         FV2B(I) = FV2B(I)+FACT7(I)/F1
C         FACT7(I)=V0*((QHTR-QCHIT)*QC1R-QQCHITR*C1+HTSC*QQC1RR)
C     *            - F1*EPSILM(I)*(HTSC*QC1R + C1*(QETM - QCHIT))
         FACT8(I) = 0.0D0
C         FACT8(I)=V0*((QHTR-QCHIT)*C1+HTSC*2.0D0*QC1R)
C     *            - F1*EPSILM(I)*HTSC*C1
C Q variables not used
C         Q1 = -V0*(QQCHITR*C1)
C         Q2 = -F1*C1*FNU*QETM
C         Q3 = -F1*C1*EPSILM(I)*(1.0D0 - FNU - QCHIT)
C         Q4 = F1*FL*QCHIT
C         Q5 = -F1*EPSILM(I)*HTSC
         FL = ALM(I)/C4PI/DM(I)/RM(I)**2
         FACD2(I) = F1*(FL*QCHIT - EPSILM(I)*HTSC)
         FACD3(I) = -F1*FL
C         WRITE(*,911)I,V0,FES3(I),FACT7(I),FACD2(I),FACD3(I),DDELM(I)
C         WRITE(*,912)Q1,Q2,Q3,Q4,Q5
C 911     FORMAT(I5,1P6E12.3)
C 912     FORMAT(5X,1P5E12.3)
         END DO
      ENDIF
      RETURN
      END
