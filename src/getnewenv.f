C $$$$$$
C MHP 07/02 NEW SUBROUTINE TO MOVE THE OUTER FITTING POINT WHEN
C THE TOTAL MASS IS BEING DECREASED; ADD NEW POINTS BY DROPPING
C A SINKLINE FROM THE SURFACE DOWN AND INCLUDING NEW POINTS UP TO
C THE DESIRED ENVELOPE MASS
      SUBROUTINE GETNEWENV(SENVOLD,HCOMP,HD,HL,HP,HR,HS,HS1,HS2,
C      *                     HSTOT,HT,LC,ETA2,HG,HI,HJM,QIW,R0,  ! KC 2025-05-31
     *                     HSTOT,HT,LC,ETA2,HI,HJM,QIW,R0,
     *                     HKEROT,BL,SJTOT,SKEROT,TEFFL,M,LNEW)
      PARAMETER (JSON=5000)
      IMPLICIT REAL*8 (A-H,O-Z)
      IMPLICIT LOGICAL*4(L)
C SENV IS THE DIFFERENCE IN MASS BETWEEN THE TOTAL AND THE LAST MODEL
C POINT.  IT IS SET TO A DIFFERENT VALUE IN THIS ROUTINE.
      COMMON/COMP/XENV,ZENV,ZENVM,AMUENV,FXENV(12),XNEW,ZNEW,STOTAL,
     *     SENV
C PHYSICAL CONSTANTS.
      COMMON/CONST/CLSUN,CLSUNL,CLNSUN,CMSUN,CMSUNL,CRSUN,CRSUNL,CMBOL
      COMMON/CONST1/ CLN,CLNI,C4PI,C4PIL,C4PI3L,CC13,CC23,CPI
      COMMON/CONST2/CGAS,CA3,CA3L,CSIG,CSIGL,CGL,CMKH,CMKHN
      COMMON/CONST3/CDELRL,CMIXL,CMIXL2,CMIXL3,CLNDP,CSECYR
      COMMON/ENVPRT/EP,ET,ER,ES,ED,EO,EBETA,EDEL(3),EFXION(3),EVEL
C EXTENDED COMPOSITION FLAG
      COMMON/FLAG/LEXCOM
C LROT NEEDED TO KNOW IF YOU HAVE TO COMPUTE ROTATION TERMS.
      COMMON/ROT/WNEW,WALPCZ,ACFPFT,ITFP1,ITFP2,LROT,LINSTB,LWNEW
C HPTTOL USED TO SET THE SPATIAL RESOLUTION OF THE ENVELOPE INTEGRATION
      COMMON/CTOL/HTOLER(5,2),FCORR0,FCORRI,FCORR,HPTTOL(12),
     1     NITER1,NITER2,NITER3
C TERMS NEEDED TO COMPUTE THE DEBYE-HUCKEL CORRECTION IN THE E.O.S.
      COMMON/DEBHU/CDH,ETADH0,ETADH1,ZDH(18),XXDH,
     1     YYDH,ZZDH,DHNUE(18),LDH
C TOLERANCES FOR THE ENVELOPE INTEGRATION; TEMPORARILY ASSIGN NEW
C VALUES FOR THE INTEGRATION TO FIND THE NEW POINTS AND THEN RESET.
      COMMON/INTENV/ENVERR,ENVBEG,ENVMIN,ENVMAX
C STORED CONTENTS OF THE ENVELOPE INTEGRATION.
C KC 2025-05-30 reordered common block elements
C JvS 08/25 Updated with new elements
      COMMON/ENVSTRUCT/ENVP(JSON),ENVT(JSON),ENVS(JSON),ENVD(JSON),
     *     ENVR(JSON),ENVX(JSON),ENVZ(JSON),LCENV(JSON),
     *     EDELS(3,JSON),EVELS(JSON),EBETAS(JSON),
     *     EGAM1(JSON),EQCP(JSON),EFXIONS(3,JSON),
     *     ENVO(JSON), ENVL(JSON),EQDT(JSON),NUMENV     
      DIMENSION HS(JSON),HL(JSON),HR(JSON),HP(JSON),HT(JSON),HD(JSON),
     * LC(JSON),HCOMP(15,JSON),OMEGA(JSON),HS1(JSON),HS2(JSON),
     * QIW(JSON),ETA2(JSON),HI(JSON),HJM(JSON),R0(JSON),
C      * HKEROT(JSON),HG(JSON),DUM1(4),DUM2(3),DUM3(3),DUM4(3)  ! KC 2025-05-31
     * HKEROT(JSON),DUM1(4),DUM2(3),DUM3(3),DUM4(3)
C G Somers 10/14, Add spot common block
      COMMON/SPOTS/SPOTF,SPOTX,LSDEPTH
C G Somers END
      SAVE
      IF(LEXCOM)THEN
         JEND = 15
      ELSE
         JEND = 11
      ENDIF
C RESTRICT THE ENVELOPE MASS TO A MINIMUM OF 10**-12.
      SENVOLD = MIN(SENVOLD,-1.0D-12)
C SAVE CURRENT VALUES OF THE TOTAL NUMBER OF POINTS AND ENVELOPE MASS.
      MM = M
      SENV1 = SENV
C SET NUMERICAL PARAMETERS OF THE ENVELOPE INTEGRATION
      EMAX0 = ENVMAX
      EMIN0 = ENVMIN
      EBEG0 = ENVBEG
      ENVMAX = HPTTOL(8)
      ENVMIN = HPTTOL(8)
      ENVBEG = HPTTOL(8)
      LSBC0 = .FALSE.
      LPRT = .TRUE.
      KATM = 0
      KENV = 0
      KSAHA = 0
C SET THE PHYSICAL PROPERTIES OF THE ENVELOPE SOLUTION
C LUMINOSITY
      B = DEXP(CLN*BL)
C RADIUS
      RL = 0.5D0*(BL + CLSUNL - 4.0D0*TEFFL - C4PIL - CSIGL)
C SURFACE GRAVITY
      GL = CGL + STOTAL - RL - RL
C COMPOSITION
      X = HCOMP(1,M)
      Z = HCOMP(3,M)
C NEGLECT ROTATIONAL DISTORTION
      FPL = 1.0D0
      FTL = 1.0D0
C PREVENT THE INTEGRATION FROM SHOOTING PAST THE
C PRESSURE OF THE OUTER MODEL POINT, AT LEAST THE
C FIRST TIME IT TRIES TO DO SO.
      PLIM = HP(M)
C DO NOT DO SOLAR PULSATION OUTPUT
      LPULPT = .FALSE.
C SET UP VALUES FOR THE EQUATION OF STATE CALCULATION
      IXX = 0
      IF (LDH) THEN
         XXDH = HCOMP(1,M)
         YYDH = HCOMP(2,M)+HCOMP(4,M)
         ZZDH = HCOMP(3,M)
         ZDH(1) = HCOMP(5,M)+HCOMP(6,M)
         ZDH(2) = HCOMP(7,M)+HCOMP(8,M)
         ZDH(3) = HCOMP(9,M)+HCOMP(10,M)+HCOMP(11,M)
      END IF
C INTEGRATE DOWN TO THE CURRENT FITTING POINT USING THE SURFACE L AND TEFF.
C MHP 10/02  define ISTORE - used in ENVINT
      IDUM = 0
C G Somers 10/14, FOR SPOTTED RUNS, FIND THE
C PRESSURE AT THE AMBIENT TEMPERATURE ATEFFL
      IF(LC(M).AND.SPOTF.NE.0.0.AND.SPOTX.NE.1.0)THEN
         ATEFFL = TEFFL - 0.25*LOG10(SPOTF * SPOTX**4.0 + 1.0 - SPOTF)
      ELSE
         ATEFFL = TEFFL
      ENDIF
      CALL ENVINT(B,FPL,FTL,GL,HSTOT,IXX,LPRT,LSBC0,PLIM,RL,
     *           ATEFFL,X,Z,DUM1,IDUM,KATM,KENV,KSAHA,DUM2,
     *           DUM3,DUM4,LPULPT)
C G Somers END
C RESET THE NUMERICAL PARAMETERS FOR THE ENVELOPE INTEGRATION
      ENVMAX = EMAX0
      ENVMIN = EMIN0
      ENVBEG = EBEG0
      SENV = SENVOLD
C STOP IF THE DESIRED NUMBER OF POINTS EXCEEDS THE ARRAY DIMENSIONS
      IF(M+NUMENV.GE.JSON) STOP 9999
C THE FIRST POINT IN THE ENVELOPE SOLUTION IS THE SET OF PROPERTIES
C OBTAINED AT A MASS EQUAL TO THE LAST INTERIOR POINT.  USE THIS TO
C ENFORCE CONSISTENCY WITH THE INTERIOR SOLUTION;
C ADJUST THE (P, RHO, T, R) POINTS TO BE CONSISTENT
C WITH THE LAST MODEL POINT AND SHIFT ALL OF THE POINTS DOWN BY ONE.
      DP = HP(M) - ENVP(1)
      DD = HD(M) - ENVD(1)
      DT = HT(M) - ENVT(1)
      DR = HR(M) - ENVR(1)
      TEST = HS(M)
      NUMNEW = 0
      DO J = 1,NUMENV - 1
         TEST2 = STOTAL+ENVS(J+1)
         IF(TEST2-TEST. GT. 1.0D-10)THEN
            ENVD(J) = ENVD(J+1)+DD
            ENVP(J) = ENVP(J+1)+DP
            ENVR(J) = ENVR(J+1)+DR
            ENVS(J) = ENVS(J+1)
            ENVT(J) = ENVT(J+1)+DT
            ENVX(J) = ENVX(J+1)
            ENVZ(J) = ENVZ(J+1)
            TEST = TEST2
            NUMNEW = NUMNEW + 1
         ENDIF
      END DO
      NUMENV = NUMNEW
C ASSIGN NEW POINTS
      DO J = M+1,M+NUMENV
         JM = J-M
C LUMINOSITY ASSUMED CONSTANT
         HL(J) = HL(M)
C INCLUDE NEW POINTS UP TO THE DIFFERENT DESIRED FITTING POINT
         IF(ENVS(JM).LT.SENV)THEN
            HD(J) = ENVD(JM)
            HP(J) = ENVP(JM)
            HR(J) = ENVR(JM)
            HS(J) = ENVS(JM) + STOTAL
            HT(J) = ENVT(JM)
            HCOMP(1,J) = ENVX(JM)
            HCOMP(3,J) = ENVZ(JM)
            DO K = 4,JEND
               HCOMP(K,J) = HCOMP(K,M)
            END DO
            HCOMP(2,J)=1.0D0-HCOMP(1,J)-HCOMP(3,J)-HCOMP(4,J)
            LC(J) = LCENV(JM)
         ELSE
C POINTS BEYOND THIS ARE ABOVE THE NEW DESIRED FITTING POINT;
C INTERPOLATE LINEARLY, SET NEW NUMBER OF TOTAL POINTS, AND EXIT
            IF(JM.EQ.1)THEN
C INTERPOLATE BETWEEN THE LAST INTERIOR POINT AND THE FIRST ENVELOPE POINT
               X0 = HS(M)
               X1 = STOTAL + SENV
               X2 = ENVS(JM) + STOTAL
               IF(X2-X0.LT.1.0D-14) STOP 9998
               FX = (X1-X0)/(X2-X0)
               HD(J) = HD(M)+FX*(ENVD(JM)-HD(M))
               HP(J) = HP(M)+FX*(ENVP(JM)-HP(M))
               HR(J) = HR(M)+FX*(ENVR(JM)-HR(M))
               HS(J) = X1
               HT(J) = HT(M)+FX*(ENVT(JM)-HT(M))
               HCOMP(1,J) = HCOMP(1,M)+FX*(HCOMP(1,M)-ENVX(JM))
               HCOMP(3,J) = HCOMP(3,M)+FX*(HCOMP(3,M)-ENVZ(JM))
               DO K = 4,JEND
                  HCOMP(K,J) = HCOMP(K,M)
               END DO
               HCOMP(2,J)=1.0D0-HCOMP(1,J)-HCOMP(3,J)-HCOMP(4,J)
               IF(LCENV(JM).OR.LC(M))THEN
                  LC(J) = .TRUE.
               ELSE
                  LC(J) = .FALSE.
               ENDIF
            ELSE
C INTERPOLATE BETWEEN THE LAST 2 ENVELOPE POINTS
               X0 = ENVS(JM-1) + STOTAL
               X1 = STOTAL + SENV
               X2 = ENVS(JM) + STOTAL
               IF(X2-X0.LT.1.0D-14) STOP 9998
               FX = (X1-X0)/(X2-X0)
               HD(J) = ENVD(JM-1)+FX*(ENVD(JM)-ENVD(JM-1))
               HP(J) = ENVP(JM-1)+FX*(ENVP(JM)-ENVP(JM-1))
               HR(J) = ENVR(JM-1)+FX*(ENVR(JM)-ENVR(JM-1))
               HS(J) = X1
               HT(J) = ENVT(JM-1)+FX*(ENVT(JM)-ENVT(JM-1))
               HCOMP(1,J) = ENVX(JM-1)+FX*(ENVX(JM)-ENVX(JM-1))
               HCOMP(3,J) = ENVZ(JM-1)+FX*(ENVZ(JM)-ENVZ(JM-1))
               DO K = 4,JEND
                  HCOMP(K,J) = HCOMP(K,M)
               END DO
               HCOMP(2,J)=1.0D0-HCOMP(1,J)-HCOMP(3,J)-HCOMP(4,J)
               IF(LCENV(JM).OR.LCENV(JM-1))THEN
                  LC(J) = .TRUE.
               ELSE
                  LC(J) = .FALSE.
               ENDIF
            ENDIF
            M = J
            GOTO 587
         ENDIF
      END DO
C ASSIGN THE BOUNDARY AT THE PHOTOSPHERE FOR ENVELOPE MASS BELOW 1.0D-12.
      M = M + NUMENV
 587  CONTINUE
C ADD THE UNLOGGED MASSES OF THE NEW SHELLS (HS1) AND COMPUTE THE
C MASS CONTENTS OF THE NEW SHELLS (HS2).
      DO J = MM,M
         HS1(J) = 10.0D0**HS(J)
      END DO
      DO J = MM,M-1
         HS2(J) = 0.5D0*(HS1(J+1)-HS1(J-1))
      END DO
      HSBASE = 0.5D0*(HS1(M)+HS1(M-1))
      HS2(M) = 10.0D0**HSTOT - HSBASE
C RECOMPUTE TERMS RELATED TO ROTATION.
      IF(LROT)THEN
C FIRST GUESS AT THE ROTATION RATES; ASSIGN A
C VECTOR OF OMEGA SUCH THAT
C OMEGA*R**WALPCZ = CONSTANT.
         IF(WALPCZ.LE.-2.0D0)THEN
C CONSTANT J/M
            DO J = MM+1,M
               HJM(J) = HJM(MM)
               HI(J) = CC23*10.0D0**(2.0D0*HR(J))
               OMEGA(J) = HJM(J)/HI(J)
            END DO
         ELSE IF(WALPCZ.GE.0.0D0)THEN
C SOLID BODY ROTATION
            DO J = MM+1,M
               OMEGA(J) = OMEGA(MM)
               HI(J) = CC23*10.0D0**(2.0D0*HR(J))
               HJM(J) = OMEGA(MM)*HI(J)
            END DO
         ELSE
C GENERAL CASE
            W0 = OMEGA(MM)*10.0D0**(HR(MM)*WALPCZ)
            DO J = MM+1,M
               OMEGA(J) = W0/10.0D0**(HR(J)*WALPCZ)
               HI(J) = CC23*10.0D0**(2.0D0*HR(J))
               HJM(J) = OMEGA(J)*HI(J)
            END DO
         ENDIF
         CALL GETROT(HD,HJM,HR,HS,HS2,LC,M,ETA2,HI,OMEGA,QIW,R0)
C GIVEN OMEGA AND I, FIND ANGULAR MOMENTUM AND ROTATIONAL K.E.
       SUMJ = 0.0D0
       SUMKE = 0.0D0
       DO 550 I = 1,M
C MHP 10/02 logic reversed!
C          HJM(I) = HJ/HS2(I)
          HJ = HJM(I)*HS2(I)
          HKEROT(I) = 0.5D0*OMEGA(I)*HJ
          SUMJ = SUMJ + HJ
          SUMKE = SUMKE + HKEROT(I)
 550     CONTINUE
       SJTOT = SUMJ
       SKEROT = SUMKE
      ENDIF
      WRITE(*,910)
 910  FORMAT(1X,'NEW INTERIOR POINTS FROM CHANGE IN ENVELOPE MASS'/
     *      ' J,LOG RHO, LOG L, LOG P, LOG R, LOG M, LOG T, CONV T/F')
      WRITE(*,911)(J,HD(J),HL(J),HP(J),HR(J),HS(J)-STOTAL,
     *             HT(J),LC(J), J = MM,M)
 911  FORMAT(I5,1P6E16.8,L2)
      LNEW = .TRUE.
       WRITE(*,597)SENV1,SENV
 597  FORMAT(5X,'***** NEW ENVELOPE MASS CALCULATED *****'/8X,
     *        'OLD SENV ',1PE22.13,'  NEW SENV',E22.13)
      RETURN
      END
