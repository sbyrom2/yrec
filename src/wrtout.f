C
C$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
C WRTOUT
C$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
      SUBROUTINE WRTOUT(HCOMP,HD,HL,HP,HR,HS,HS1,HT,LC,M,MODEL,DAGE,
     *DDAGE,SMASS,TEFFL,BL,GL,LSHELL,JXBEG,JXMID,JXEND,JCORE,JENV,
     *TLUMX,TRIT,TRIL,PS,TS,RS,CFENV,FTRI,HSTOT,OMEGA,LPUNCH,
C      * FP,FT,ETA2,R0,HJM,HI,SJTOT,SKEROT,HS2,NKK)  ! KC 2025-05-31
     * FP,FT,ETA2,R0,HJM,HI,SJTOT,SKEROT,HS2)
      PARAMETER (JSON=5000)
      IMPLICIT REAL*8(A-H,O-Z)
      IMPLICIT LOGICAL*4(L)
C MHP 8/25 Fscomp file depreciated,unused variables removed
C      CHARACTER*256 FLAST, FFIRST, FRUN, FSTAND, FFERMI,
C     1    FDEBUG, FTRACK, FSHORT, FMILNE, FMODPT,
C     2    FSTOR, FPMOD, FPENV, FPATM, FDYN, FISO,
C     3    FLLDAT, FSNU, FSCOMP, FKUR,
C     4    FMHD1, FMHD2, FMHD3, FMHD4, FMHD5, FMHD6, FMHD7, FMHD8
C JVS 0712 for call to envint:
C       REAL*8 DUM1(4),DUM2(3),DUM3(3),DUM4(3)
C JVS 10/13 for recalculation of taucz
C       REAL*8 DEL1(JSON), DEL2(JSON)
C end JVS
      COMMON/LUOUT/ILAST,IDEBUG,ITRACK,ISHORT,IMILNE,IMODPT,ISTOR,IOWR
      COMMON/LUNUM/IFIRST, IRUN, ISTAND, IFERMI,
     1    IOPMOD, IOPENV, IOPATM, IDYN,
     2    ILLDAT, ISNU, ISCOMP, IKUR
C      COMMON/LUFNM/ FLAST, FFIRST, FRUN, FSTAND, FFERMI,
C     1    FDEBUG, FTRACK, FSHORT, FMILNE, FMODPT,
C     2    FSTOR, FPMOD, FPENV, FPATM, FDYN,
C     3    FLLDAT, FSNU, FSCOMP, FKUR,
C     4    FMHD1, FMHD2, FMHD3, FMHD4, FMHD5, FMHD6, FMHD7, FMHD8
      COMMON/CENT/TCENTER,PCENTER,DCENTER,ENVLM,ENVR
      COMMON/TRACK/ITRVER
      COMMON/CCOUT/LSTORE,LSTATM,LSTENV,LSTMOD,LSTPHYS,LSTROT,LSCRIB,LSTCH,LPHHD
      COMMON/CCOUT1/NPENV,NPRTMOD,NPRTPT,NPOINT
      COMMON/CCOUT2/LDEBUG,LCORR,LMILNE,LTRACK,LSTPCH
      COMMON/COMP/XENV,ZENV,ZENVM,AMUENV,FXENV(12),XNEW,ZNEW,STOTAL,
     *     SENV
      COMMON/CONST/CLSUN,CLSUNL,CLNSUN,CMSUN,CMSUNL,CRSUN,CRSUNL,CMBOL
      COMMON/CONST1/ CLN,CLNI,C4PI,C4PIL,C4PI3L,CC13,CC23,CPI
      COMMON/CONST2/CGAS,CA3,CA3L,CSIG,CSIGL,CGL,CMKH,CMKHN
      COMMON/FLAG/LEXCOM
      COMMON/HEFLSH/LKUTHE
      COMMON/LABEL/XENV0,ZENV0
      COMMON/ROT/WNEW,WALPCZ,ACFPFT,ITFP1,ITFP2,LROT,LINSTB,LWNEW
      COMMON/SCRTCH/SESUM(JSON),SEG(7,JSON),SBETA(JSON),SETA(JSON),
     *LOCONS(JSON),SO(JSON),SDEL(3,JSON),SFXION(3,JSON),SVEL(JSON),SCP(JSON)
C DBG PULSE
      COMMON/PULSE/XMSOL,LPULSE,IPVER
      COMMON/MHD/LMHD,IOMHD1,IOMHD2,IOMHD3,IOMHD4,IOMHD5,IOMHD6,
     1           IOMHD7, IOMHD8
C*** MHP 5/90 ADD COMMON BLOCK FOR GRAVITATIONAL SETTLING.
      COMMON/GRAVST/GRTOL,ILAMBDA,NITER_GS,LDIFY
C*** MHP 7/91 ADD COMMON BLOCKS FOR SOLAR NEUTRINO I/O.
      COMMON/FLUXES/FLUX(10),FLUXTOT(10),CLSNU,GASNU
      COMMON/NEWENG/NITER4,LNEWS,LSNU
C MHP 8/25 Removed character file names from common block
C DBG 11/11/91
      COMMON/CHRONE/LRWSH, LISO, IISO
C DBG 7/92 COMMON BLOCK ADDED TO COMPUTE DEBYE-HUCKEL CORRECTION.
      COMMON/DEBHU/CDH,ETADH0,ETADH1,ZDH(18),XXDH,
     1             YYDH,ZZDH,DHNUE(18),LDH
      COMMON/ROTPRT/LPRT0
C MHP 4/09 ADDED OPTION TO SCALE THE SATURATION RATE BY THE OVERTURN TIMESCALE
      COMMON/DEUTER/DRATE(JSON),DRATE0(JSON),FMASSACC,JCZ
C JVS 01/11 ACOUSTIC DEPTH
C KC 2025-05-30 reordered common block elements
C 	COMMON/ACDPTH/TAUCZN,DELADJ(JSON),TAUHE, TNORM, TCZ, WHE, ICLCD,
      COMMON/ACDPTH/TAUCZN,DELADJ(JSON),TAUHE, TNORM, TCZ, WHE,
     *ACATMR(JSON), ACATMD(JSON), ACATMP(JSON), ACATMT(JSON),TATMOS,
C      *LCLCD, AGEOUT(5), IACAT, IJLAST, LJLAST, LJWRT, LADON,LAOLY, IJVS,
     *AGEOUT(5), LCLCD, ICLCD, IACAT, IJLAST, LJLAST, LJWRT, LADON, LAOLY, IJVS,
     *IJENT, IJDEL, LACOUT
C JVS 08/13 IF THE CZ IS BEYOND THE FITTING POINT, STORE ITS LOCATION
      COMMON/ENVCZ/ENVRCZ, RINT
      COMMON/SOUND/GAM1(JSON),LSOUND
C G Somers 10/14, Add spot common block
      COMMON/SPOTS/SPOTF,SPOTX,LSDEPTH
      COMMON/TEMP2/VES(JSON),VES0(JSON),VSS(JSON),VSS0(JSON),
     *     HLE(JSON),VGSF(JSON),VGSF0(JSON),VMU(JSON)
      COMMON/ROTEN/DEROT(JSON)
C G Somers END
      DATA ICHECK/0/


C JVS END
C JVS 10/11 Common block for He3+He3 luminosity
      COMMON/GRAB/ENGHE3,HE3ALL,UMHE33(JSON),UMHEAL(JSON)
C JVS end
C G Somers 3/17, ADDING NEW TAUCZ COMMON BLOCK
      COMMON/OVRTRN/LNEWTCZ,LCALCENV,TAUCZ,TAUCZ0,PPHOT,PPHOT0,FRACSTEP
      DIMENSION FXION(3),TLUMX(8),HCOMP(15,JSON),HD(JSON),HL(JSON),
     *HP(JSON),HR(JSON),HS(JSON),HS1(JSON),HT(JSON),LC(JSON),
     *PS(3),TS(3),RS(3),CFENV(9),TRIT(3),TRIL(3),OMEGA(JSON),
     * FP(JSON),FT(JSON),ETA2(JSON),R0(JSON),HJM(JSON),HI(JSON),
     * HS2(JSON), CLSNUF(8),GASNUF(8)  ! ID(JSON)
C MHP 8/96 CROSS SECTIONS OF DIFFERENT NEUTRINOS TO THE CHLORINE
C AND GALLIUM EXPERIMENTS; TAKEN FROM NEUTRINO ASTROPHYSICS,P.207.
C note changes in cl37 cross sections (see bahcall and pinsonneault,
C REV.MOD.PHYS., P.895)
      DATA GASNUF/1.18D1,2.15D2,7.14D4,7.17D1,2.40D4,6.04D1,
     *            1.137D2,1.139D2/
      DATA CLSNUF/0.0D0,1.6D1,4.26D4,2.4D0,1.14D4,1.7D0,6.8D0,6.9D0/
      SAVE

      LTSCAL=.FALSE.
C  RENORMALIZE LUMINOSITY TERMS TLUMX - SKIPPED FOR HE FLASH
      IF(.NOT.LKUTHE) THEN
       THL = TLUMX(1)+TLUMX(2)+TLUMX(3)+TLUMX(4)+TLUMX(5)+TLUMX(6)+
     *   TLUMX(7)+TLUMX(8)
       TEMP = HL(M)/THL
       DO 10 I = 1,8
          TLUMX(I) = TLUMX(I)*TEMP
   10    CONTINUE
      ENDIF
C  WRITE HEADER FILE DESCRIBING THE GLOBAL PROPERTIES OF THE STAR
C  AND THE CENTRAL CONDITIONS TO THE SHORT OUTPUT FILE
C  THIS INFORMATION IS ALSO WRITTEN TO THE MODEL OUTPUT FILE IF
C  A DETAILED BREAKDOWN OF THE STELLAR STRUCTURE IS TO BE PRINTED
C  FOR THIS MODEL.
C
      WRITE(ISHORT,21)
   20 FORMAT(1X,127('*'))
   21 FORMAT(/,1X,127('*'))
      IF(.NOT.LKUTHE) THEN
       WRITE(ISHORT,30)MODEL,SMASS,XNEW,ZNEW,DAGE,DDAGE
   30    FORMAT(1X,'MODEL NO.',I5,2X,'MASS',F13.7,2X,'(X,Z)=(',F11.9,
     *   ',',F11.9,')',2X,'AGE(GYRS)',F14.8,' STEP(YRS)=',F12.0)
      ELSE
       WRITE(ISHORT,40)MODEL,SMASS,XNEW,ZNEW,DAGE,DDAGE
   40    FORMAT(1X,'MODEL NO.',I5,2X,'MASS',F13.7,2X,'(X,Z)=(',F11.9,
     *   ',',F11.9,')',2X,'AGE(GYRS)',F14.8,' STEP(YRS)=',1PE12.4)
      ENDIF
C  CALCULATE MASS OF CENTRAL AND SURFACE CONVECTION ZONES
C  THESE MASSES ARE IN SOLAR UNITS
      IF(JCORE.GT.1) THEN
       COREM = HS1(JCORE)/CMSUN
      ELSE
       COREM = 0.0D0
      ENDIF

C JVS 10/11 Be more care about the true boundary of the convective core
      IF (JCORE.GT.1) THEN
       FX2 = (SDEL(3,JCORE+1)-SDEL(1,JCORE))/
     *       (SDEL(3,JCORE+1)-SDEL(1,JCORE))
       CORERL = HR(JCORE)+FX*(HR(JCORE+1)-HR(JCORE))-CRSUNL
       CORER = DEXP(CLN*CORERL)
      ELSE
       CORER = 0.0D0
      ENDIF
C JVS end

      BOLM = CMBOL-2.5D0*BL
      RL = 0.5D0*(BL + CLSUNL - C4PIL - CSIGL - 4.0D0*TEFFL)
      GL = CGL + STOTAL - RL - RL
C MHP 02/12 MOVED ABOVE SECTION WHERE THESE ARE USED
C  DETERMINE CENTRAL T,P, AND DENSITY USING THE FIRST SHELL VALUES.
C  CENTRAL ETA AND BETA ARE ALSO CALCULATED.
C  EXTRAPOLATE FROM INNER SHELL P AND T TO CENTRAL P AND T
      TEMP =0.5D0*DEXP(CLN*(CC13*(C4PI3L+HD(1)-HS(1))+HD(1)+CGL+HS(1)))
      P = DEXP(CLN*HP(1))
      PL = DLOG10(P + TEMP)
C  SDEL(2,1) IS THE ACTUAL T GRADIENT AT POINT 1( = DEL)
      TL = HT(1) + DLOG10(1.0D0+ TEMP*SDEL(2,1)/P)
      DL = HD(1)
      X = HCOMP(1,1)
      Z = HCOMP(3,1)
      LATMO = .TRUE.
      LDERIV = .FALSE.
C  CALL EQSTAT TO GET TRUE CENTRAL DENSITY, BETA, AND ETA.
C YC  If LMHD then use MHD equation of state.
      IF (LMHD) THEN
         CALL MEQOS(TL,T,PL,P,DL,D,X,Z,BETA,BETAI,BETA14,FXION,RMU,
C      *   AMU,EMU,ETA,QDT,QDP,QCP,DELA,QDTT,QDTP,QAT,QAP,QCPT,QCPP,
C      *   LDERIV,LATMO,KSAHA)  ! KC 2025-05-31
     *   AMU,EMU,ETA,QDT,QDP,QCP,DELA,QDTT,QDTP,QAT,QAP,QCPT,QCPP)
      ELSE
         IF (LDH) THEN
            XXDH = HCOMP(1,1)
            YYDH = HCOMP(2,1)+HCOMP(4,1)
            ZZDH = HCOMP(3,1)
            ZDH(1) = HCOMP(5,1)+HCOMP(6,1)
            ZDH(2) = HCOMP(7,1)+HCOMP(8,1)
            ZDH(3) = HCOMP(9,1)+HCOMP(10,1)+HCOMP(11,1)
         END IF
         CALL EQSTAT(TL,T,PL,P,DL,D,X,Z,BETA,BETAI,BETA14,FXION,RMU,
     *   AMU,EMU,ETA,QDT,QDP,QCP,DELA,QDTT,QDTP,QAT,QAP,QCPT,QCPP,
     *   LDERIV,LATMO,KSAHA)
      END IF
C MHP 02/12 MOVED ABOVE TO WHERE FIRST USED
C STORE CENTRAL RHO,P,T FOR LATER USE
      PCENTER = PL
      TCENTER = TL
      DCENTER = DL
C MHP 02/12 FIXED MINOR GLITCH ON BASE OF THE CONVECTION ZONE
C PROPERTIES FOR FULLY CONVECTIVE STARS; TCENTER PCENTER RHOCENTER
C WERE BEING DEFINED AFTER THIS CODE SECTION
      IF(JENV.LT.M) THEN
       IF(JENV.GT.1) THEN
C  FIND MASS FRACTION OF THE ZONE EDGE AT BASE OF SURFACE C.Z.
C JVS 10/11/13 SDEL(1,JENV) IN DENOMINATOR WAS A TYPO. CHANGED TO SDEL(3,JENV)
C            FX = (SDEL(3,JENV)-SDEL(1,JENV-1))/
C     *           (SDEL(3,JENV)-SDEL(1,JENV-1))
            DD2 = SDEL(1,JENV-1)-SDEL(3,JENV-1)
            DD1 = SDEL(1,JENV)-SDEL(3,JENV)
            FX = DD2/(DD2-DD1)
c            HSB = 0.5D0*(HS1(JENV)+HS1(JENV-1))
            HSB = HS1(JENV-1)+FX*(HS1(JENV)-HS1(JENV-1))
            ENVLM = (EXP(CLN*HSTOT) - HSB)/CMSUN
C           ENVLM = SMASS-HS1(JENV-1)/CMSUN
C          HSR = 0.5D0*(10.0D0**HR(JENV)+10.0D0**HR(JENV-1))
C          ENVX = HSR/(10.0D0**RL)
C MHP 2/98 FIND RADIUS OF CZ BASE
            ENVRL = HR(JENV-1)+FX*(HR(JENV)-HR(JENV-1))-CRSUNL
            ENVR = EXP(CLN*ENVRL)
            ENVO = SO(JENV-1)+FX*(SO(JENV)-SO(JENV-1))
            ENVTL = HT(JENV-1)+FX*(HT(JENV)-HT(JENV-1))
            ENVDL = HD(JENV-1)+FX*(HD(JENV)-HD(JENV-1))
            ENVPL = HP(JENV-1)+FX*(HP(JENV)-HP(JENV-1))
            ENVT = EXP(CLN*ENVTL)
            ENVD = EXP(CLN*ENVDL)
            ENVP = EXP(CLN*ENVPL)
       ELSE
          ENVLM = SMASS
          ENVR = 0.0D0
            ENVT = 10.0D0**TCENTER
            ENVD = 10.0D0**DCENTER
            ENVP = 10.0D0**PCENTER
            ENVO = SO(1)
       ENDIF
      ELSE
       ENVLM = 0.0D0
       ENVR = 0.0D0
         ENVT = 0.0D0
         ENVD = 0.0D0
         ENVP = 0.0D0
         ENVO = 0.0D0
      ENDIF
      WRITE(ISHORT,50)M,XENV0,ZENV0,COREM,ENVLM, ENVR
   50 FORMAT(1X,'SHELLS=',I5,2X,'(X0,Z0)=(',F9.7,',',F9.7,')',2X,
     *'CONV. ZONE MASSES(MSUN): CORE',F10.7,' ENV.',F10.7,
     *' RAD. FRAC.',F10.7)
      RL = RL - CRSUNL
      WRITE(ISHORT,60)TEFFL,BOLM,BL,RL,GL
   60 FORMAT(1X,'LOG(TEFF)=',F11.8,'  M(BOL)=',F11.7,'  LOG(L/LSUN)='
     *,F12.8,'  LOG(R/RSUN)=',F12.8,'  LOG(G) =',F12.8)
C MHP 02/12 MOVED ABOVE SECTION WHERE THESE ARE USED
C  DETERMINE CENTRAL T,P, AND DENSITY USING THE FIRST SHELL VALUES.
C  CENTRAL ETA AND BETA ARE ALSO CALCULATED.
C  EXTRAPOLATE FROM INNER SHELL P AND T TO CENTRAL P AND T
C      TEMP =0.5D0*DEXP(CLN*(CC13*(C4PI3L+HD(1)-HS(1))+HD(1)+CGL+HS(1)))
C      P = DEXP(CLN*HP(1))
C      PL = DLOG10(P + TEMP)
C  SDEL(2,1) IS THE ACTUAL T GRADIENT AT POINT 1( = DEL)
C      TL = HT(1) + DLOG10(1.0D0+ TEMP*SDEL(2,1)/P)
C      DL = HD(1)
C      X = HCOMP(1,1)
C      Z = HCOMP(3,1)
C      LATMO = .TRUE.
C      LDERIV = .FALSE.
C  CALL EQSTAT TO GET TRUE CENTRAL DENSITY, BETA, AND ETA.
C YC  If LMHD then use MHD equation of state.
C      IF (LMHD) THEN
C         CALL MEQOS(TL,T,PL,P,DL,D,X,Z,BETA,BETAI,BETA14,FXION,RMU,
C     *   AMU,EMU,ETA,QDT,QDP,QCP,DELA,QDTT,QDTP,QAT,QAP,QCPT,QCPP,
C     *   LDERIV,LATMO,KSAHA)
C      ELSE
C      IF (LDH) THEN
C         XXDH = HCOMP(1,1)
C         YYDH = HCOMP(2,1)+HCOMP(4,1)
C         ZZDH = HCOMP(3,1)
C         ZDH(1) = HCOMP(5,1)+HCOMP(6,1)
C         ZDH(2) = HCOMP(7,1)+HCOMP(8,1)
C         ZDH(3) = HCOMP(9,1)+HCOMP(10,1)+HCOMP(11,1)
C      END IF
C      CALL EQSTAT(TL,T,PL,P,DL,D,X,Z,BETA,BETAI,BETA14,FXION,RMU,
C     *AMU,EMU,ETA,QDT,QDP,QCP,DELA,QDTT,QDTP,QAT,QAP,QCPT,QCPP,LDERIV,
C     *LATMO,KSAHA)
C      END IF
      WRITE(ISHORT,70)PL,TL,DL,BETA,ETA,X,Z,HCOMP(9,1)
   70 FORMAT(1X,'CENTER: LOG P=',F10.7,' LOG T=',F10.8,' LOG D=',
     *F10.6,' BETA=',F9.7,' ETA=',0PF10.5,'  X=',0PF9.7,' Z=',F9.7,
     *' O16=',F9.7)
      WRITE(ISHORT,80)(TLUMX(J),J = 1,5),TLUMX(8),TLUMX(6),TLUMX(7)
   80 FORMAT(1X,'ENERGY: PPI',1PE13.6,'  PPII',E13.6,'  PPIII',E13.6,
     *'  CNO',E13.6,/,9X,'TRIPLE ALPHA',E13.6,'  HE-C',E13.6,
     *'  NEUTRINOS',E13.6,'  GRAV',E13.6)
      SS3 = 0.0D0
      SS4 = 0.0D0
      IF(LSHELL) THEN
C H-SHELL VALUES PRINTED OUT - MASSES IN SOLAR UNITS
C SS1 - MASS INTERIOR TO CENTER OF H SHELL; SS2 = MASS OF H SHELL;
C SS3 = HE CORE MASS; SS4 = MASS INTERIOR TO SHELL WITH MAXIMUM T
       SS1 = HS1(JXMID)/CMSUN
       SS2 = (HS1(JXEND) - HS1(JXBEG-1))/CMSUN
       SS3 = HS1(JXBEG-1)/CMSUN
       TLMAX = TL
C LOCATE MAXIMUM T - NOTE DIFFERENT METHOD USED FOR HE FLASH
       IF(.NOT.LKUTHE) THEN
          DO 100 I = 2,M
             IF(HT(I).LT.HT(I-1))GOTO 110
  100       CONTINUE
          I = M + 1
  110       ITMAX = I - 1
          IF(ITMAX.GT.1) THEN
             SS4 = HS1(ITMAX)/CMSUN
             TLMAX = HT(ITMAX)
          ELSE
             SS4 = 0.0D0
             TLMAX = HT(1)
          ENDIF
          WRITE(ISHORT,120)SS1,SS2,SS3,TLMAX,SS4
  120       FORMAT(1X,'H-SHELL MID-PT=',F10.7,' MASS TOTAL=',
     *         F10.7,2X,'HE-CORE MASS=',F10.7,1X,'MAX-T=',F10.7,
     *         ' (MASS=',F9.7,')')
       ELSE
C  HE FLASH
          DO 130 I = 2,M
             IF(HT(I).LT.HT(I-1) .AND. HT(I-1).GT.7.98D0) GOTO 140
  130       CONTINUE
          I = M + 1
  140       ITMAX = I - 1
          IF(ITMAX.GT.1) THEN
             SS4 = HS1(ITMAX)/CMSUN
             TLMAX = HT(ITMAX)
C  ADDITIONAL OUTPUT FOR HE FLASH
             RLMAX = HR(ITMAX)
             LCMAX = LC(ITMAX)
             WRITE(ISHORT,120)SS1,SS2,SS3,TLMAX,SS4
             WRITE(ISHORT,150)LCMAX,RLMAX
  150          FORMAT(1X,'CONVECTION = ',L1,5X,'LOG(R) MAX-T =',F8.5)
          ENDIF
       ENDIF
C  END H-SHELL SECTION
      ENDIF
C     PRINT OUT NEUTRINO RATES FROM ENGEB CALCULATION
      WRITE(ISHORT,160) (FLUXTOT(I),I=1,8)
  160 FORMAT(1X,'NEUTRINOS 1E10ERG/CM^2 PP,PEP,HEP,BE7,',
     *  'B8,N13,O15,F17:', 1P8E9.2)
C DBG 7/93 from Bahcall's book p 207 table 8.2
      FL7LI = 0.0D0*FLUXTOT(1)+665.0D0*FLUXTOT(2)+8.4D4*FLUXTOT(3)+
     *        9.6D0*FLUXTOT(4)+3.9D4*FLUXTOT(5)+42.4D0*FLUXTOT(6)+
     *        246.0D0*FLUXTOT(7)+249.0D0*FLUXTOT(8)
      FL37CL = 0.0D0*FLUXTOT(1)+16.0D0*FLUXTOT(2)+4.26D4*FLUXTOT(3)+
     *        2.4D0*FLUXTOT(4)+1.09D4*FLUXTOT(5)+1.7D0*FLUXTOT(6)+
     *        6.8D0*FLUXTOT(7)+6.9D0*FLUXTOT(8)
      FL71GA = 11.8D0*FLUXTOT(1)+215.0D0*FLUXTOT(2)+7.3D4*FLUXTOT(3)+
     *        73.2D0*FLUXTOT(4)+2.43D4*FLUXTOT(5)+61.8D0*FLUXTOT(6)+
     *        116.0D0*FLUXTOT(7)+117.0D0*FLUXTOT(8)
      FL81BR = 0.0D0*FLUXTOT(1)+75.0D0*FLUXTOT(2)+9.0D4*FLUXTOT(3)+
     *        18.3D0*FLUXTOT(4)+2.7D4*FLUXTOT(5)+14.5D0*FLUXTOT(6)+
     *        36.7D0*FLUXTOT(7)+37.0D0*FLUXTOT(8)
      FL98MO = 0.0D0*FLUXTOT(1)+0.0D0*FLUXTOT(2)+10.0D4*FLUXTOT(3)+
     *        0.0D0*FLUXTOT(4)+3.0D4*FLUXTOT(5)+0.0D0*FLUXTOT(6)+
     *        0.0D0*FLUXTOT(7)+0.0D0*FLUXTOT(8)
      FL115IN = 78.0D0*FLUXTOT(1)+576.0D0*FLUXTOT(2)+6.1D4*FLUXTOT(3)+
     *        248.0D0*FLUXTOT(4)+2.5D4*FLUXTOT(5)+224.0D0*FLUXTOT(6)+
     *        355.0D0*FLUXTOT(7)+356.0D0*FLUXTOT(8)
      WRITE(ISHORT,2160) FL7LI,FL37CL,FL71GA,FL81BR,FL98MO,FL115IN
 2160 FORMAT(1X,'NEUTRINO ENERGIES (1.E-36ERG): 7Li=', 1PE9.2,
     * ' 37Cl=',1PE9.2,' 71Ga=',1PE9.2,' 81Br=',1PE9.2,' 98Mo=',
     * 1PE9.2, ' 115In=', 1PE9.2)
      FITMAS = HS1(M)/CMSUN
      WRITE(ISHORT,170)FITMAS,HP(M),HT(M),HR(M)
  170 FORMAT(1X,'FIT-POINT    M/MSUN=',F16.12,5X,'(P,T,R) =',3F12.7)
      WRITE(ISHORT,20)
      IF(LTRACK) THEN
C MHP 02/12 MOVED ABOVE TO WHERE FIRST USED
C MHP 8/96
C STORE CENTRAL RHO,P,T FOR LATER USE
C         PCENTER = PL
C         TCENTER = TL
C         DCENTER = DL
c  Total moment of inertia
         HITOT = 0.0D0
         IF(.NOT.LROT)THEN
            DO I = 1,M
               HITOT = HITOT + CC23*HS2(I)*EXP(2.0D0*CLN*HR(I))
            END DO
         ELSE
            DO I = 1,M
               HITOT = HITOT + HI(I)
            END DO
         ENDIF
C MHP 12/09 NEW OPTION TO OUTPUT TRACK INFORMATION IN ONE LINE PER MODEL FORMAT.
         IF(ITRVER .EQ. 0) THEN
C MHP 8/96 ADD LINE TO COMPUTE SNU's for Cl37 and Ga71.
            CLSNU = 0.0D0
            GASNU = 0.0D0
            IF(LSNU) THEN
               DO I = 1,8
                  CLSNU = CLSNU + CLSNUF(I)*FLUXTOT(I)
                  GASNU = GASNU + GASNUF(I)*FLUXTOT(I)
               END DO
            ELSE
               DO I = 1,10
                  FLUXTOT(I) = 0.0D0
               END DO
            ENDIF
C MHP 02/12
C ADDED SURFACE CZ MOMENT OF INERTIA CALCULATION TO NON-ROTATING
C MODELS, AND CORRECTLY ZERO OUT TERMS NOT COMPUTED IN SPHERICAL MODELS
C ROTATION I/O
            HICZ = 0.0D0
            IF(LROT) THEN
               ROTP = MIN(9999.0D0,0.5D0*C4PI/OMEGA(M)/8.64D4)
               ROTV = OMEGA(M)*EXP(CLN*(RL+CRSUNL))*1.0D-5
               IF(JENV.LT.M)THEN
                  DO K = JENV,M
                     HICZ = HICZ + HI(K)
                  END DO
               ENDIF
            ELSE
               ROTP = 0.0D0
               ROTV = 0.0D0
               IF(JENV.LT.M)THEN
                  DO K = JENV,M
                     HICZ = HICZ + CC23*HS2(K)*EXP(2.0D0*CLN*HR(K))
                  END DO
               ENDIF
            ENDIF
C END CHANGED SECTION
C        Get location of bottom, middle, top of B burning shell.
            IF(LSHELL) THEN
             SSS1 = HS1(JXBEG)/CMSUN
             SSS2 = HS1(JXMID)/CMSUN
             SSS3 = HS1(JXEND)/CMSUN
             RRR1 = EXP(CLN*(HR(JXBEG)-RL-CRSUNL))
             RRR2 = EXP(CLN*(HR(JXMID)-RL-CRSUNL))
             RRR3 = EXP(CLN*(HR(JXEND)-RL-CRSUNL))
          ELSE
             SSS1 = 0.0D0
             SSS2 = SSS1
             SSS3 = SSS1
             RRR1 = SSS1
             RRR2 = SSS1
             RRR3 = SSS1
             ENDIF
C JVS 0712 Drop sinkline to get pressure at photosphere (updates PPHOT)
C             ABEG0 = ATMBEG
C            AMIN0 = ATMMIN
C            AMAX0 = ATMMAX
C            EBEG0 = ENVBEG
C            EMIN0 = ENVMIN
C            EMAX0 = ENVMAX
C            ATMBEG = ATMSTP
C            ATMMIN = ATMSTP
C            ATMMAX = ATMSTP
C            ENVBEG = ENVSTP
C            ENVMIN = ENVSTP
C            ENVMAX = ENVSTP
C            IDUM = 0
C            B = DEXP(CLN*BL)
C            FPL = FP(M)
C             FTL = FT(M)
C            KATM = 0
C             KENV = 0
C             KSAHA = 0
CCCC            LPULPT=.FALSE.
C            IXX=0
C            LPRT=.FALSE.
C            LSBC0 = .FALSE.
C            X = HCOMP(1,M)
C             Z = HCOMP(3,M)
C            RLL = 0.5D0*(BL + CLSUNL - 4.0D0*TEFFL - C4PIL - CSIGL)
C            GL = CGL + HSTOT - RLL - RLL
C            PLIM = HP(M)
CC G Somers 10/14, FOR SPOTTED RUNS, FIND THE
CC PRESSURE AT THE AMBIENT TEMPERATURE ATEFFL
C            IF(JENV.EQ.M.AND.SPOTF.NE.0.0.AND.SPOTX.NE.1.0)THEN
C                   ATEFFL = TEFFL - 0.25*LOG10(SPOTF*SPOTX**4.0+1.0-SPOTF)
C            ELSE
C               ATEFFL = TEFFL
C            ENDIF
C            CALL ENVINT(B,FPL,FTL,GL,HSTOT,IXX,LPRT,LSBC0,
C     *            PLIM,RLL,ATEFFL,X,Z,DUM1,IDUM,KATM,KENV,KSAHA,
C     *            DUM2,DUM3,DUM4,LPULPT)
CC G Somers END
C
CC JVS 08/13 TRACKS CZ EVEN WHEN OUTSIDE THE ENVELOPE FITTING POINT
C      IF(JENV.GE.M .AND. .NOT. LC(M)) THEN
C            ENVR = ENVRCZ
C      ELSE IF(JENV.GE.M .AND. LC(M)) THEN
C            DO I=1,M
C                  DEL1(I) = SDEL(1,I)
C                  DEL2(I) = SDEL(3,I)
C            ENDDO
C                  LJVS = .TRUE.
C                  CALL TAUINT(HCOMP,HS2,HS1,LC,HR,HP,HD,HG,M,SVEL,DEL1,DEL2)
C                  LJVS = .FALSE.
C                  DD2 = DEL1(JENV-1)-DEL2(JENV-1)
C                  DD1 = DEL1(JENV)-DEL2(JENV)
C                  FX = DD2/(DD2-DD1)
C                  ENVCZL = HR(JENV-1)+FX*(HR(JENV)-HR(JENV-1))
C                  ENVR = EXP(CLN*ENVCZL)/CRSUN
C      ELSE
C            DO I=1,M
C                  DEL1(I) = SDEL(1,I)
C                  DEL2(I) = SDEL(3,I)
C            ENDDO
C                  LJVS = .TRUE.
C                  CALL TAUINT(HCOMP,HS2,HS1,LC,HR,HP,HD,HG,M,SVEL,DEL1,DEL2)
C                  LJVS = .FALSE.
C      ENDIF
C
C G Somers 3/17, ADDED CALL TO NEW TAUCZ AND PPHOT CALCULATION ROUTINE.

C       CALL GETTAU(HCOMP,HR,HP,HD,HG,HS1,HT,FP,FT,TEFFL,  ! KC 2025-05-31
      CALL GETTAU(HCOMP,HR,HP,HD,HS1,HT,FP,FT,TEFFL,
     *            HSTOT,BL,M,LC,ENVR)
      TAUCZ0 = TAUCZ
      PPHOT0 = PPHOT

C JVS 02/12 Added PPHOT and SMASS to the output
            WRITE(ITRACK, 1499) MODEL,M,DAGE,BL,RL,GL,TEFFL,COREM,ENVLM,
     *      ENVR,ENVT,ENVD,ENVP,ENVO,TL,DL,PL,BETA,ETA,HCOMP(1,1),HCOMP(2,1),
     1      HCOMP(3,1),(TLUMX(J),J = 1,5),TLUMX(8),TLUMX(7),TLUMX(6),
     2      CLSNU,GASNU,(FLUXTOT(I),I=1,10),(HCOMP(I,1),I=4,11),
     3      (HCOMP(I,M),I=4,15),(HCOMP(I,M),I=1,3),HCOMP(3,M)/HCOMP(1,M),
     4      SJTOT,SKEROT,HITOT,HICZ,OMEGA(M),OMEGA(1),ROTP,ROTV,TAUCZ,
     5      SSS1,SSS2,SSS3,RRR1,RRR2,RRR3,PPHOT,SMASS
 1499       FORMAT(1X,2I8,1P7E16.8,0PF8.4,1P4E12.4,16E16.8,12E10.3,41E16.8)
         ELSE IF(ITRVER .EQ.1 .OR. ITRVER .EQ.2) THEN
            WRITE(ITRACK,1500)MODEL,M,DAGE,BL,RL,GL,TEFFL,COREM,ENVLM,
     *                     ENVR,ENVT,ENVD,ENVP,ENVO
 1500       FORMAT(1X,2I8,1P7E16.8,0PF8.4,1P4E12.4)
            WRITE(ITRACK,1509)TL,DL,PL,BETA,ETA,HCOMP(1,1),HCOMP(2,1),
     1                     HCOMP(3,1),HITOT
 1509       FORMAT(1X,1P9E16.8)
 1510       FORMAT(1X,1P8E16.8)
            WRITE(ITRACK,1510)(TLUMX(J),J = 1,5),
     1                     TLUMX(8),TLUMX(7),TLUMX(6)

C MHP 8/96 ADD LINE TO COMPUTE SNU's for Cl37 and Ga71.
            CLSNU = 0.0D0
            GASNU = 0.0D0
            DO I = 1,8
               CLSNU = CLSNU + CLSNUF(I)*FLUXTOT(I)
               GASNU = GASNU + GASNUF(I)*FLUXTOT(I)
            END DO
          WRITE(ITRACK, 1515) CLSNU,GASNU,(FLUXTOT(I),I=1,10)
 1515       FORMAT(1X,2F8.3,1P10E10.3)
            WRITE(ITRACK,1510)(HCOMP(I,1),I=4,11)
C ADD SURFACE X,Y,Z,Z/X.
            WRITE(ITRACK,1520)(HCOMP(I,M),I=4,15),
     *        (HCOMP(I,M),I=1,3),HCOMP(3,M)/HCOMP(1,M)
 1520       FORMAT(1X,1P8E16.8,/,1X,1P8E16.8)
C ROTATION I/O
            IF(LROT) THEN
               ROTP = MIN(9999.0D0,0.5D0*C4PI/OMEGA(M)/8.64D4)
               ROTV = OMEGA(M)*EXP(CLN*(RL+CRSUNL))*1.0D-5
               HICZ = 0.0D0
               IF(LC(M))THEN
                  DO K = JENV,M
                     HICZ = HICZ + HI(K)
                  END DO
               ELSE
                  HICZ = 0.0D0
               ENDIF
            ENDIF
C        Get location of bottom, middle, top of B burning shell.
            IF(LSHELL) THEN
             SSS1 = HS1(JXBEG)/CMSUN
             SSS2 = HS1(JXMID)/CMSUN
             SSS3 = HS1(JXEND)/CMSUN
             RRR1 = EXP(CLN*(HR(JXBEG)-RL-CRSUNL))
             RRR2 = EXP(CLN*(HR(JXMID)-RL-CRSUNL))
             RRR3 = EXP(CLN*(HR(JXEND)-RL-CRSUNL))
             ELSE
             SSS1 = 0.0D0
             SSS2 = SSS1
             SSS3 = SSS1
             RRR1 = SSS1
             RRR2 = SSS1
             RRR3 = SSS1
          ENDIF
            WRITE(ITRACK,1530)SSS1,SSS2,SSS3,RRR1,RRR2,RRR3
 1530       FORMAT(1X, 1P6E16.8)
         ENDIF
C        ROTATION STUFF
C 4/09 ADDED TAUCZ TO ROTATION INFORMATION
         IF (ITRVER .EQ. 2) THEN

            WRITE(ITRACK,1540)SJTOT,SKEROT,HITOT,HICZ,OMEGA(M),
     *                     OMEGA(1),ROTP,ROTV,TAUCZ
 1540       FORMAT(1X, 1P6E13.5,0P,2F11.5,1E13.5)
         END IF
         IF (ITRVER .EQ. 3) THEN
C        RATIO OF GRAV TO TOTAL ENERGY
C       GROTOT = 100.0*TLUMX(7)/HL(M)
            WRITE(ITRACK,1501)MODEL,M,DAGE,BL,RL,GL,TEFFL,COREM,ENVLM,
     *      ENVR, XNEW
 1501       FORMAT(1X,2I8,1P5E13.5, 1P2E11.3, 0PF8.4, 1PE13.5)

         END IF
      ENDIF

C April 1992, DBG ISOCHRONE OUTPUT
      IF(LISO) THEN
C Write out model no., age (yr), L (erg/s), R (cm), Teff (K),
C g (cm/s**2), Ycenter, Mass He core (gm)
        YRAGE = DAGE*1.0D9
        ERGPSL = 10.0D0**BL
          ERGPSL = ERGPSL*CLSUN
        CMR = 10.0D0**RL
          CMR = CMR*CRSUN
        XKTEFF = 10.0D0**TEFFL
        CMPSQS = 10.0D0**GL
        YCENTER = HCOMP(2,1)
        IF (LSHELL) THEN
           GMHECORE = HS1(JXBEG-1)
        ELSE
           GMHECORE = 0.0D0
        END IF
          WRITE(IISO,1005)MODEL,YRAGE,ERGPSL,CMR,XKTEFF,CMPSQS,YCENTER,
     *      GMHECORE
 1005     FORMAT(1X, I5, 1P7E17.8)
      END IF
C MHP 8/25 Fscomp depreciated, call commented out
C     WRITE OUT SURFACE COMPOSITIONS TO FILE ISCOMP IF extended comp MODEL.
C      IF(LEXCOM) THEN
C       OPEN(UNIT=ISCOMP,FILE=FSCOMP, FORM='FORMATTED',
C     *        STATUS='UNKNOWN',ACCESS='APPEND')
C       WRITE(ISCOMP,235)MODEL,DAGE,HCOMP(4,M),HCOMP(5,M),HCOMP(6,M),
C     *                HCOMP(7,M),HCOMP(14,M),HCOMP(15,M)
C  235    FORMAT(I4,F13.9,1P6E10.3)
c       CLOSE(ISCOMP)
C      ENDIF
C
C G Somers 11/14, WRITE THE LAST MODEL TO .LAST, AND IF LSTORE=T AND WE'RE ON
C A STORING TIMESTEP, WRITE THE EXTENDED INFORMATION TO LSTORE. IF NOT, GRAB
C THE PULSATION INFO IF LPULSE=TRUE.
C
C  STORE LAST CONVERGED MODEL IN LOGICAL UNIT ILAST
C  IF LSTORE = T, STORE EVERY NPUNCH MODELS IN LOGICAL UNIT ISTOR
C  IF LSTPCH = T, STORE THE LAST MODEL CALCULATED IN A RUN
      IWRITE = ILAST
      CALL WRTLST(IWRITE,HCOMP,HD,HL,HP,HR,HS,HT,LC,TRIT,TRIL,PS,
     *TS,RS,CFENV,FTRI,TLUMX,JCORE,JENV,MODEL,M,SMASS,TEFFL,BL,HSTOT,
     *DAGE,DDAGE,OMEGA)
C
C  PRINT OUT MODEL DETAILS IF REQUESTED FOR THIS MODEL. THIS IS ALL DONE
C  IN THE SR PUTSTORE.
C
      IF(LSTORE.AND.MOD(MODEL,NPRTMOD).EQ.0) THEN
       CALL PUTSTORE(HCOMP,HD,HL,HP,HR,HS,HT,LC,TRIT,TRIL,PS,
     *   TS,RS,CFENV,FTRI,TLUMX,JCORE,JENV,MODEL,M,SMASS,TEFFL,BL,
     *   HSTOT,DAGE,DDAGE,OMEGA,HS1,ETA2,R0,FP,FT,HJM,HI)
       LPUNCH = .FALSE.
      ENDIF
c the call to putstore above creates the necessary pulsation output for LPULSE.
c however, in the event that the above block is not executed and pulsation
c output is desired, call wrtmod.
      IF(.NOT.(LSTORE.AND.MOD(MODEL,NPRTMOD).EQ.0) .AND. LPULSE) THEN
       IF(LMILNE) CALL WRTMIL(HCOMP,HD,HL,HP,HR,HS1,M,MODEL)
C        CALL WRTMOD(M,LSHELL,JXBEG,JXEND,JCORE,JENV,HCOMP,HS1,HD,HL,
C      *   HP,HR,HT,LC,MODEL,BL,TEFFL,OMEGA,FP,FT,ETA2,R0,HJM,HI,HS,
C      *   DAGE)  ! KC 2025-05-31
       CALL WRTMOD(M,JENV,HCOMP,HS1,HD,HL,
     *   HP,HR,HT,MODEL,BL,TEFFL,FP,FT,HS,DAGE)
      ENDIF
C G Somers END

C JVS 01/11 Added new track file output format, +manipulations for stitching
C together the interior and envelope pieces. Columns 68,69,70 are normalized
C acoustic depth, depth to CZ and acoustic crossing time, respectively.
        IF (LACOUT) THEN
            IF(JENV.GT.1 .AND. LADON) THEN
                  CALL CALCAD(HR, ENVRL, M, HD, HP,HT,BL, FP, FT, HSTOT,
C      *            LPRT, TEFFL, HCOMP, NKK, DAGE, DDAGE, JENV)  ! KC 2025-05-31
     *            TEFFL, HCOMP, DAGE, JENV)
            ELSE IF (JENV.EQ.1) THEN
                  TAUCZN=0.0D0
            ENDIF
            IF (LC(M)) THEN
                  ICHECK=1
            ELSE IF (.NOT. LC(M)) THEN
                  ICHECK = 0
            ENDIF

        IF (LJLAST) THEN
         IWRITE = IJLAST
         CALL WRTLST(IWRITE,HCOMP,HD,HL,HP,HR,HS,HT,LC,TRIT,TRIL,PS,
     *   TS,RS,CFENV,FTRI,TLUMX,JCORE,JENV,MODEL,M,SMASS,TEFFL,BL,HSTOT,
     *   DAGE,DDAGE,OMEGA)
        ENDIF

            WRITE(ITRACK, 1800) MODEL,M,DAGE,BL,RL,GL,TEFFL,COREM,ENVLM,
     *      ENVR,ENVT,ENVD,ENVP,ENVO,TL,DL,PL,BETA,ETA,HCOMP(1,1),HCOMP(2,1),
     1      HCOMP(3,1),(TLUMX(J),J = 1,5),TLUMX(8),TLUMX(7),TLUMX(6),
     2      CLSNU,GASNU,(FLUXTOT(I),I=1,10),(HCOMP(I,1),I=4,11),
     3      (HCOMP(I,M),I=4,15),(HCOMP(I,M),I=1,3),HCOMP(3,M)/HCOMP(1,M),
     4      SJTOT,TAUCZN,TCZ,TNORM,TAUHE,WHE,TATMOS,ROTV,TAUCZ,
     5      SSS1,SSS2,SSS3,RRR1,RRR2,RRR3, ICHECK
 1800      FORMAT(1X,2I8,1P7E16.8,0PF8.4,1P4E12.4,16E16.8,12E10.3,
     *            39E16.8, I8)

C JVS END
       ENDIF
C JVS 08/25 Added the option to output a stitched version of the interior and envelope 
C solutions.
      IF(LSTCH.AND.MOD(MODEL,NPRTMOD).EQ.0) THEN
          CALL STITCH(HCOMP,HR,HP,HD,HS,HT,HL,HS1,OMEGA,ETA2,HI,R0,HJM,
     *          FP,FT,TEFFL,HSTOT,BL,M,LC,MODEL)
      ENDIF

      RETURN
      END
