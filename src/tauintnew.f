C$$$$$$
C       RECURSIVE SUBROUTINE TAUINTNEW(HCOMP,HS2,HS1,LCZ,HR,HP,HD,HG,M,MINT,SVEL,
C      *                     DEL1,DEL2,HSTOT,RBCZ)  ! KC 2025-05-31
      RECURSIVE SUBROUTINE TAUINTNEW(HS1,LCZ,HR,HP,HD,HG,M,MINT,SVEL,
     *                     DEL1,DEL2,RBCZ)
      PARAMETER(JSON=5000)
      IMPLICIT REAL*8(A-H,O-Z)
      IMPLICIT LOGICAL*4(L)
      COMMON/COMP/XENV,ZENV,ZENVM,AMUENV,FXENV(12),XNEW,ZNEW,STOTAL,
     *     SENV
      COMMON/DEUTER/DRATE(JSON),DRATE0(JSON),FMASSACC,JCZ
      COMMON/OVRTRN/LNEWTCZ,LCALCENV,TAUCZ,TAUCZ0,PPHOT,PPHOT0,FRACSTEP
      COMMON/ROT/WNEW,WALPCZ,ACFPFT,ITFP1,ITFP2,LROT,LINSTB,LWNEW
      COMMON/CONST2/CGAS,CA3,CA3L,CSIG,CSIGL,CGL,CMKH,CMKHN
      COMMON/CONST/CLSUN,CLSUNL,CLNSUN,CMSUN,CMSUNL,CRSUN,CRSUNL,CMBOL
      COMMON/CONST1/ CLN,CLNI,C4PI,C4PIL,C4PI3L,CC13,CC23,CPI
      COMMON/JTEST/ IMAX1, IMAX2, LJVS
C Needs access to this common block: grants knowledge of envellope
C KC 2025-05-30 reordered common block elements
C JvS 08/25 Updated with new elements
      COMMON/ENVSTRUCT/ENVP(JSON),ENVT(JSON),ENVS(JSON),ENVD(JSON),
     *     ENVR(JSON),ENVX(JSON),ENVZ(JSON),LCENV(JSON),
     *     EDELS(3,JSON),EVELS(JSON),EBETAS(JSON),
     *     EGAM1(JSON),EQCP(JSON),EFXIONS(3,JSON),
     *     ENVO(JSON), ENVL(JSON),EQDT(JSON),NUMENV     
C       DIMENSION HCOMP(15,JSON),HS2(JSON),LCZ(JSON),  ! KC 2025-05-31
      DIMENSION LCZ(JSON),
     *     HR(JSON), HP(JSON), HD(JSON), HG(JSON), HS1(JSON),  ! XSUM(15)
     *     DEL1(JSON), DEL2(JSON), SVEL(JSON)
C G Somers; Adding vectors for cubic spline int.
      DIMENSION XDEL(4),XRAD(4),YRAD(4),YVEL(4),YPSC(4),YSPL(4)
      SAVE
C
C G Somers 3/17, IMPLEMENTING NEW TAUCZ METHOD.
C THE METHOD WORKS AS FOLLOWS. SEARCH FROM THE CENTER OF THE STAR UP UNTIL YOU
C FIND THE BASE OF THE SURFACE CONVECTION ZONE. THEN SEARCH FROM THE SURFACE
c DOWN UNTIL YOU FIND THE SAME. IF BOTH DIRECTIONS GIVE SAME ANSWER, THEN
c SURFACE CONVECTION ZONE IS UNIQUE, AND THE OLD TOP-DOWN SINKLINE METHOD CAN
c BE EMPLOYED. IF THEY ARE DIFFERENT, THEN MULTIPLE SURFACE CONVECTION CELLS
C EXIST. IN THIS CASE, DETERMINE THE CROSSING TIME OF THE LOWEST CONVECTION
C CELL IN THE ENVELOPE.
C
C IMAX: BASE OF THE MAIN INTERNAL CONVECTION ZONE.
C JMAX: BASE OF THE UPPER-MOST CONVECTION ZONE.
C RBCZ: RADIUS AT WHICH THE BCZ EXISTS
C TAUCZ: OVERTURN TIMESCALE
C
C DETERMINE EXTENT OF SURFACE CONVECTION ZONE.
      LALLCZ = .FALSE.
C FIND THE TOP OF THE MAIN INTERNAL CONVECTION ZONE.
      IBEG = 1
   50 LRADZONE = .TRUE.
      IF (LCZ(IBEG)) LRADZONE = .FALSE.
      DO 60 I = IBEG,M,1
         IF (.NOT.LRADZONE.AND..NOT.LCZ(I)) THEN
            JCORE = I-1
            LRADZONE = .TRUE.
         ENDIF
         IF (LRADZONE.AND.LCZ(I)) GOTO 70
   60 CONTINUE
C IF THE CODE GETS HERE, EITHER THE STAR IS FULLY CONVECTIVE, OR
C HAS A COMPLETELY RADIATIVE ENVLOPE, MAYBE WITH A CONVECTIVE CORE.
      IF(LRADZONE)THEN ! RADIATIVE ENVELOPE
         LALLCZ = .FALSE.
         LCZSUR = .FALSE.
         IMAX = M
         JMAX = M
         JCORE = M
         GOTO 100
      ELSE ! FULLY CONVECTIVE
         LALLCZ = .TRUE.
         LCZSUR = .TRUE.
         I = 1
         J = 0
         JCORE = 1
       GOTO 90
      ENDIF
   70 CONTINUE
C FIND THE BASE OF THE UPPER-MOST CONVECTION ZONE
      DO 80 J = M-1,1,-1
         IF(.NOT.LCZ(J)) GOTO 90
   80 CONTINUE
   90 IMAX = I
      JMAX = J + 1
      IJMAX = JMAX-IMAX
C LOCATING THE CORRECT CZ INCURES VARIOUS PATHOLOGIES. TRAP THEM OUT.
C
C ENSURE THIS CZ IS SUFFICIENTLY FAR FROM THE CONVECTIVE CORE. IN SOME CASES
C THERE ARE A FEW SHELLS RIGHT ABOVE THE CORE THAT ARE CONVECTIVE. SKIP THESE.
C KC 2025-05-30 ADDED IF CHECK TO AVOID RUNTIME ERROR.
      IF (IMAX .GT. 0 .AND. JCORE .GT. 0) THEN
         IF(M.NE.MINT .AND. HP(JCORE)-HP(IMAX).LT.1)THEN
            IBEG = IMAX+1
            GOTO 50
         ENDIF
      ENDIF
C ENSURE THIS CZ IS AT LEAST 3 SHELLS THICK. IF NOT, WE ARE LIKELY SNAGGED
C ON A SINGLE SHELL CONV ZONE DEEP IN THE INTERIOR. RECOMMENSE SEARCH FROM
C ABOVE THIS SHELL.
      IF(.NOT.(LCZ(IMAX).AND.LCZ(IMAX+1).AND.LCZ(IMAX+2)))THEN
         IF(.NOT.LCZ(IMAX+1))THEN
            IBEG = IMAX+1
         ELSE
            IBEG = IMAX+2
         ENDIF
         GOTO 50
      ENDIF
C IN THE CASE WHERE ONLY THE INTERIOR MODEL IS CONSIDERED, USE JMAX.
      IF (IJMAX.NE.0.AND.M.EQ.MINT) THEN
         IMAX = JMAX
         IJMAX = 0
      ENDIF
C  HSTOP IS THE MASS AT THE TOP OF THE C.Z.
C  HSBOT IS THE MASS AT THE BOTTOM OF THE C.Z.
      HSTOP = HS1(M)
      IF(JMAX.GT.1)THEN
         HSBOT = 0.5D0*(HS1(JMAX)+HS1(JMAX-1))
      ELSE
         HSBOT = 0.0D0
      ENDIF
C  LCZSUR=T IF A SURFACE C.Z.DEEP ENOUGH FOR ANGULAR MOMENTUM LOSS EXISTS
      IF((HSTOP-HSBOT)/CMSUN.GT.0.0D0)THEN
         LCZSUR = .TRUE.
      ELSE
         LCZSUR= .FALSE.
      ENDIF
  100 CONTINUE

C CALCULATE TAUCZ TOP DOWN FOR FULLY AND PARTIALLY CONVECTIVE. FOR A FULLY
C RADIATIVE ENVELOPE, SET TAUCZ = 0.0.
      IF(LCZSUR)THEN
C INFER RBCZ, THE RADIUS AT THE BASE OF THE SURFACE CZ.
         IF(LALLCZ)THEN
C           SET TO CENTER OF STAR, I.E. A VERY SMALL NUMBER
C           IN CGS UNITS, RELATIVE TO THE RADII OF STARS.
            RBCZ = 1.
         ELSE
C           PINPOINT RCZ LINEARLY
            DD2 = DEL1(IMAX-1)-DEL2(IMAX-1)
            DD1 = DEL1(IMAX)-DEL2(IMAX)
            FX = DD2/(DD2-DD1)
            RBCZ = HR(IMAX-1)+FX*(HR(IMAX)-HR(IMAX-1))
         ENDIF
         RBCZ = EXP(CLN*RBCZ)
C        IF THERE ARE MULTIPLE CONVECTION CELLS IN THE PREDOMINATELY
C        RADIATIVE ENVELOPE, USE AVERAGING METHOD.
         IF (IJMAX.NE.0) GOTO 110
C CALCULATE HP
         PSCA2 = EXP(CLN*(HP(IMAX)-HD(IMAX)))/HG(IMAX)
         RTEST2 = EXP(CLN*HR(IMAX))-RBCZ
         VALTEST = RTEST2 - PSCA2
         IF(VALTEST.GT.0.0)THEN
C INNER MOST POINT PSCA IS BELOW BCZ
            K = IMAX
            CVEL = SVEL(IMAX)
            PSCA = PSCA2
            TAUCZ = PSCA/CVEL
         ELSE
            DO K = IMAX+1,M-1,1
               PSCA1 = PSCA2
               RTEST1 = RTEST2
               PSCA2 = EXP(CLN*(HP(K)-HD(K)))/HG(K)
               RTEST2 = EXP(CLN*HR(K))-RBCZ
               VALTEST = RTEST2 - PSCA2
C              FIND LOCATION WHERE HP = R
               IF(VALTEST.GT.0.0)THEN
C                 IF K = IMAX+1, MOVE AWAY FROM EDGE CASE.
                  KK = K
                  IF (K.EQ.IMAX+1) KK = K+1
C                 FIND V WITH CUBIC SPLINE
                  XDEL(1) = EXP(CLN*HR(KK-2))-RBCZ-
     *                      EXP(CLN*(HP(KK-2)-HD(KK-2)))/HG(KK-2)
                  XDEL(2) = EXP(CLN*HR(KK-1))-RBCZ-
     *                      EXP(CLN*(HP(KK-1)-HD(KK-1)))/HG(KK-1)
                  XDEL(3) = EXP(CLN*HR(KK))-RBCZ-
     *                      EXP(CLN*(HP(KK)-HD(KK)))/HG(KK)
                  XDEL(4) = EXP(CLN*HR(KK+1))-RBCZ-
     *                      EXP(CLN*(HP(KK+1)-HD(KK+1)))/HG(KK+1)
                  YVEL(1) = SVEL(KK-2)
                  YVEL(2) = SVEL(KK-1)
                  YVEL(3) = SVEL(KK)
                  YVEL(4) = SVEL(KK+1)
                  CALL KSPLINE(XDEL,YVEL,YSPL)
                  CALL KSPLINT(XDEL,YVEL,YSPL,0.0D0,CVEL)
                  YPSC(1) = EXP(CLN*(HP(KK-2)-HD(KK-2)))/HG(KK-2)
                  YPSC(2) = EXP(CLN*(HP(KK-1)-HD(KK-1)))/HG(KK-1)
                  YPSC(3) = EXP(CLN*(HP(KK)-HD(KK)))/HG(KK)
                  YPSC(4) = EXP(CLN*(HP(KK+1)-HD(KK+1)))/HG(KK+1)
                  CALL KSPLINE(XDEL,YPSC,YSPL)
                  CALL KSPLINT(XDEL,YPSC,YSPL,0.0D0,PSCA)
                  YRAD(1) = HR(KK-2)
                  YRAD(2) = HR(KK-1)
                  YRAD(3) = HR(KK)
                  YRAD(4) = HR(KK+1)
                  CALL KSPLINE(XDEL,YRAD,YSPL)
                  CALL KSPLINT(XDEL,YRAD,YSPL,0.0D0,ENVRCL)
C DEFINE TAUCZ
                  TAUCZ = PSCA/CVEL
                  GOTO 140
               ENDIF
            END DO
C KC 2025-05-31 MOVED ENDIF HERE TO AVOID BLOCK MISMATCH.
         ENDIF
  110       CONTINUE
c IF CODE GETS HERE, THEN 1 PSCA ABOVE THE BCZ IS OUTSIDE OF THE STAR,
c OR MULTIPLE CONVECTION CELLS RESIDE WITHIN THE RADIATIVE ENVELOPE.
C IN THIS CASE, EVALUATE CVEL AT CENTER OF BOTTOM CZ. FIRST, FIND UPPER EDGE.
            DO K = IMAX,M-1,1
               IF(.NOT.LCZ(K))GOTO 120
            ENDDO
  120       ITOP = K-1
c PINPOINT TOP OF CZ LINEARLY
            DD2 = DEL1(ITOP)-DEL2(ITOP)
            DD1 = DEL1(ITOP+1)-DEL2(ITOP+1)
            FX = DD2/(DD2-DD1)
            RTCZ = HR(ITOP)+FX*(HR(ITOP+1)-HR(ITOP))
            RTCZ = EXP(CLN*RTCZ)
C CALCULATE WIDTH OF THE CONVECTION CELL
            DELR = RTCZ - RBCZ
C FIND INDICES SURROUNDING LINEAR CENTER OF CZ
            RTEST = LOG10(RBCZ + 0.5*DELR)
            DO K = IMAX,ITOP+1,1
               IF(HR(K).GT.RTEST) GOTO 130
            ENDDO
  130       CONTINUE
            RTEST = EXP(CLN*RTEST)
C           IF K = IMAX+1, MOVE AWAY FROM EDGE CASE.
            KK = K
            IF (K.EQ.IMAX+1) KK = K+1
C CALCULATE CVEL AT THAT CENTRAL LOCATION
            XRAD(1) = EXP(CLN*HR(KK-2))
            XRAD(2) = EXP(CLN*HR(KK-1))
            XRAD(3) = EXP(CLN*HR(KK))
            XRAD(4) = EXP(CLN*HR(KK+1))
            YVEL(1) = SVEL(KK-2)
            YVEL(2) = SVEL(KK-1)
            YVEL(3) = SVEL(KK)
            YVEL(4) = SVEL(KK+1)
            CALL KSPLINE(XRAD,YVEL,YSPL)
            CALL KSPLINT(XRAD,YVEL,YSPL,RTEST,CVEL)
C DEFINE TAUCZ
            TAUCZ = DELR/CVEL
  140       CONTINUE
C KC 2025-05-31 MOVED ENDIF ABOVE TO AVOID BLOCK MISMATCH.
C          ENDIF
C        CONVERT CORE RADIUS INTO SOLAR UNITS
         RBCZ = RBCZ/CRSUN
      ELSE
         TAUCZ = 0.0D0
         RBCZ = 0.0
      ENDIF
C     ENSURE THAT TAUCZ WAS NOT ACCIDENTALLY CALCULATED
C     DEEP IN THE STELLAR INTERIOR. IF YES, REDO CALCULATION.
      IF (TAUCZ.GT.1.0E20) THEN
         IBEG = IMAX + 1
       GOTO 50
      ENDIF
      RETURN
      END
