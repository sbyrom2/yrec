CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C MICRODIFF_SETUP
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
      SUBROUTINE MICRODIFF_SETUP(DT,HQPR,HR,HD,HS1,HT,LC,M,STOT,HCOMP,HRU,HTU,
     *            IBEGIN,IEND,LALLCZ,ODEN,OTEM)

      PARAMETER (JSON=5000)
      IMPLICIT REAL*8(A-H,O-Z)
      IMPLICIT LOGICAL*4(L)

      COMMON/LUOUT/ILAST,IDEBUG,ITRACK,ISHORT,IMILNE,IMODPT,ISTOR,IOWR
      COMMON/CONST/CLSUN,CLSUNL,CLNSUN,CMSUN,CMSUNL,CRSUN,CRSUNL,CMBOL
      COMMON/CONST1/CLN,CLNI,C4PI,C4PIL,C4PI3L,CC13,CC23,CPI
      COMMON/CONST3/CDELRL,CMIXL,CMIXL2,CMIXL3,CLNDP,CSECYR
      COMMON/CONFAC/CON_RAD,CON_MASS,CON_TEMP,CON_TIME
      COMMON/GRAVS2/DT_GS,XMIN,YMIN,LTHOULFIT
      COMMON/SCRTCH/SESUM(JSON),SEG(7,JSON),SBETA(JSON),SETA(JSON),
     *LOCONS(JSON),SO(JSON),SDEL(3,JSON),SFXION(3,JSON),SVEL(JSON),SCP(JSON)
      COMMON/GRAVST/GRTOL,ILAMBDA,NITER_GS,LDIFY
      COMMON/GRAVS3/FGRY,FGRZ,LTHOUL,LDIFZ
C MHP 8/94 ADDED I/O FOR DIFFUSION
      COMMON/GSCOF/APP(JSON),ATP(JSON),APZP(JSON),ATZP(JSON)
C      COMMON/GSCOF2/TAPP(JSON),TATP(JSON),TCLP(JSON),TAPZP(JSON),
C     *              TATZP(JSON)
CFD 10/09 ADDED COMMON BLOCK FOR EXTRA MIXING. IT MIMIC SOME MIXING BY AFFECTING
C        THE SETTLING COEFFICIENT DIRECTLY (in setup_grsett.f)
      COMMON/CMIXING/CSTMIXING, CSTDIFFMIX
C
      DIMENSION HQPR(JSON),HR(JSON),HT(JSON),HS1(JSON),HD(JSON),
     *          LC(JSON),HCOMP(15,JSON),HRU(JSON),HTU(JSON),
     *          ODEN(JSON),OTEM(JSON)
      SAVE
C
C     OUTPUT VARIABLES :
C
C     HRU - VECTOR OF UNLOGGED RADII IN BAHCALL AND LOEB UNITS.
C     HTU - VECTOR OF UNLOGGED TEMPERATURES IN BAHCALL AND LOEB UNITS.
C     IBEGIN - FIRST ZONE FOR DIFFUSION PURPOSES (EITHER THE FIRST MODEL POINT
C          OR THE OUTERMOST POINT OF A CENTRAL CONVECTION ZONE).
C     IEND - LAST ZONE FOR DIFFUSION PURPOSES (EITHER THE LAST MODEL POINT OR
C        THE INNERMOST POINT OF A SURFACE CONVECTION ZONE).
C     THE VECTORS HQPR AND HS1, AND THE SCALARS DT AND STOT, ARE ALSO CONVERTED
C     TO BAHCALL AND LOEB UNITS.
C     CONSTANTS DEFINED :
C     CLN = CONVERSION FACTOR FROM LN TO LOG10
C     CRSUN = SOLAR RADIUS (CM)
C     CSECYR = NUMBER OF SECONDS IN A YEAR.
      CRSUN_BAH=6.9598D10
      CSECYR_BAH=3.1558D7
C     LALLCZ=T FOR FULLY CONVECTIVE MODEL(AND IF TRUE, DIFFUSION IS SKIPPED).
      LALLCZ=.FALSE.
C     CHECK FOR CONVECTIVE CORE.
      IF(LC(1))THEN
         DO 10 I=2,M
            IF(.NOT.LC(I))GOTO 20
   10    CONTINUE
C        DIFFUSION NOT COMPUTED FOR FULLY CONVECTIVE MODELS.
         LALLCZ=.TRUE.
         WRITE(ISHORT,15)
   15    FORMAT(1X,' FULLY CONVECTIVE MODEL - NO SETTLING')
         GOTO 9999
   20    CONTINUE
C        COMPUTE OVERSHOOT (TO BE ADDED).
         IBEGIN = I-1
      ELSE
         IBEGIN = 1
      ENDIF
C MHP 6/90 CHECK FOR HYDROGEN-EXHAUSTED CORE.
      DO 23 I = IBEGIN,M
         IF(HCOMP(1,I).GT.XMIN)GOTO 25
   23 CONTINUE
C     HYDROGEN-FREE MODEL - EXIT.
      WRITE(ISHORT,16)XMIN
   16 FORMAT(1X,'X BELOW ',F9.6,' IN WHOLE MODEL-NO SETTLING')
      LALLCZ = .TRUE.
      GOTO 9999
   25 CONTINUE
      IBEGIN = I
C     CHECK FOR CONVECTIVE ENVELOPE.
      IF(LC(M))THEN
         DO 30 I=M-1,2,-1
            IF(.NOT.LC(I))GOTO 40
   30    CONTINUE
   40    CONTINUE
C        COMPUTE OVERSHOOT (TO BE ADDED).
         IEND = I+1
      ELSE
         IEND = M
      ENDIF
C     CHECK FOR HELIUM-EXHAUSTED SURFACE.
C     OUTER POINT IS SET WHEREVER Y>YMIN.
      DO 45 I=IEND,1,-1
         IF(HCOMP(2,I).GT.YMIN) GOTO 47
   45 CONTINUE
C     HYDROGEN-FREE MODEL - EXIT.
      WRITE(ISHORT,17)YMIN
   17 FORMAT(1X,'Y BELOW ',F9.6,' IN WHOLE MODEL-NO SETTLING')
      LALLCZ = .TRUE.
      GOTO 9999
   47 CONTINUE
      IEND = I
C     CON_MASS=CONVERSION FACTOR FOR MASS.
C     CON_RADIUS=CONVERSION FACTOR FOR RADIUS.
C     CON_TEMP=CONVERSION FACOTR FOR TEMPERATURE.
C     CON_TIME=CONVERSION FACTOR FOR TIME.
      CON_RAD=1.0D0/CRSUN_BAH
      CON_MASS=1.0D-2*CON_RAD**3
      CON_TEMP=1.0D-7
C     INCLUDES FACTOR OF 2.2 FROM LN LAMBDA
      CON_TIME=2.7D13*CSECYR_BAH
C     CONVERT LOG(RADIUS) AND LOG(TEMPERATURE) TO NATURAL UNITS.
C     ALSO CONVERT NATURAL UNITS TO BAHCALL AND LOEB UNITS.
      DO 50 I=1,M
         HRU(I)=EXP(CLN*HR(I))*CON_RAD
         HTU(I)=EXP(CLN*HT(I))*CON_TEMP
         HS1(I)=HS1(I)*CON_MASS
         HQPR(I)=HQPR(I)/CON_RAD
C        SDEL(2,I)=0.4D0   !COMMENT OUT IN REAL CODE
   50 CONTINUE
      DT=DT/CON_TIME
      STOT=STOT*CON_MASS
C
C COLLECT THE NECESSARY QUANTITIES (NAMELY RHO AND T) FOR LATER
C TRANSFORMATION TO THE EQUALLY SPACED GRID.
      DO I = 1,M
         ODEN(I) = EXP(CLN*HD(I))
         OTEM(I) = EXP(CLN*HT(I))
      ENDDO
 9999 CONTINUE
      RETURN
      END
