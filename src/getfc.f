C
C$$$$$$GETFC
C
      SUBROUTINE GETFC(HD,HRU,HV,IMIN,IMAX,OMEGA)

      PARAMETER (JSON=5000)
      IMPLICIT REAL*8(A-H,O-Z)
      IMPLICIT LOGICAL*4(L)
      COMMON/CONST1/ CLN,CLNI,C4PI,C4PIL,C4PI3L,CC13,CC23,CPI
      COMMON/INTVAR/ALM(JSON),DELAMI(JSON),DELMI(JSON),DM(JSON),
     *              EPSILM(JSON),HGM(JSON),HS3(JSON),PM(JSON),
     *              QDTMI(JSON),RM(JSON),TM(JSON)
      COMMON/VMULT/FW,FC,FO,FES,FGSF,FMU,FSS,RCRIT
      COMMON/VARFC/VFC(JSON),LVFC,LDIFAD
      DIMENSION HD(JSON),HRU(JSON),HV(JSON),
     *          OMEGA(JSON),ALPHA(JSON),V(JSON)
      SAVE
C INPUT VARIABLES :
C HD - LOG10 OF DENSITY(GM/CM**3) AT ZONE CENTERS.
C RM - UNLOGGED RUN OF RADII AT ZONE EDGES.
C HRU - UNLOGGED RUN OF RADII AT ZONE CENTERS.
C HV - UNLOGGED RUN OF DIFFUSION VELOCITIES AT ZONE EDGES.
C IMIN,IMAX - STARTING AND ENDING SHELLS.
C OMEGA - RUN OF ANGULAR VELOCITIES AT ZONE CENTERS.
C OUTPUT VARIABLE :
C VFC - RATIO OF DIFFUSION COEFFICIENT FOR MIXING TO THAT FOR
C       ANGULAR MOMENTUM TRANSPORT.
C THIS SUBROUTINE SOLVES FOR THE VARIABLE FC USING THE
C PRESCRIPTION OF ZAHN (1992).
C FC = MIN (1, C/30*U/(2V-ALPHA*U), WHERE ALPHA=1/2 D(LN J/M)/D LN R
C AND V = 1/(6*RHO*R) *D/DR(RHO* R**2 * U) (U = DIFFUSION VELOCITY).
C
C IF FC = 0, SKIP CALCULATION (NO MIXING).

      IF(FC.LE.0.0D0)THEN
         DO I = IMIN,IMAX
            VFC(I) = 0.0D0
         END DO
         GOTO 9999
      ENDIF
C DETERMINE ALPHA.
      DO I = IMIN,IMAX
         WM = 0.5D0*(OMEGA(I)+OMEGA(I-1))
         ALPHA(I) = (OMEGA(I)*HRU(I)**2-OMEGA(I-1)*HRU(I-1)**2)/
     *              (HRU(I)-HRU(I-1))/(WM*RM(I))
      END DO
C DETERMINE 2V.
      FX = (HRU(IMIN)-RM(IMIN))/(RM(IMIN+1)-RM(IMIN))
      VM = HV(IMIN)+FX*(HV(IMIN+1)-HV(IMIN))
      DR2VM = EXP(CLN*HD(IMIN))*HRU(IMIN)**2*VM
      DO I = IMIN + 1, IMAX - 1
         FX = (HRU(I)-RM(I))/(RM(I+1)-RM(I))
         VP = HV(I)+FX*(HV(I+1)-HV(I))
         DR2VP = EXP(CLN*HD(I))*HRU(I)**2*VP
         RHOR = DM(I)*RM(I)
         V(I) = CC13*(DR2VP-DR2VM)/RHOR/(HRU(I)-HRU(I-1))
         DR2VM = DR2VP
      END DO
C FOR FIRST AND LAST SHELLS, CALCULATE U*D/DR(RHO*R**2) AND ASSUME
C DU/DR = VALUE DERIVED FROM THE LAST NEIGHBOR SHELL WITH NONZERO V.
      RHOR = DM(IMIN)*RM(IMIN)
      DRHOR2 = (EXP(CLN*HD(IMIN))*HRU(IMIN)**2 -
     *         EXP(CLN*HD(IMIN-1))*HRU(IMIN-1)**2)/
     *         (HRU(IMIN) - HRU(IMIN-1))
      DUDR = (HV(IMIN+1)-HV(IMIN))/(RM(IMIN+1)-RM(IMIN))
      V(IMIN) = CC13*(HV(IMIN)*DRHOR2/RHOR + RM(IMIN)*DUDR)
      RHOR = DM(IMAX)*RM(IMAX)
      DRHOR2 = (EXP(CLN*HD(IMAX))*HRU(IMAX)**2 -
     *         EXP(CLN*HD(IMAX-1))*HRU(IMAX-1)**2)/
     *         (HRU(IMAX) - HRU(IMAX-1))
      DUDR = (HV(IMAX)-HV(IMAX-1))/(RM(IMAX)-RM(IMAX-1))
      V(IMAX) = CC13*(HV(IMAX)*DRHOR2/RHOR + RM(IMAX)*DUDR)
C NOW COMPUTE RUN OF FC; THIS ASSUMES THAT FC = SAME FOR ALL
C MECHANISMS AND IS LIMITED TO A MAXIMUM OF 1.
      DO I = IMIN,IMAX
         IF(HV(I).LE.0.0D0)THEN
            VFC(I) = 0.0D0
         ELSE
            FTEST = MAX(ABS(V(I)-ALPHA(I)*HV(I))/HV(I),FC)
            VFC(I) = FC/FTEST
         ENDIF
      END DO
 9999 CONTINUE

      RETURN
      END
